// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ergo_adapter.proto

package blockchain

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message for getting information by account address
type AddressRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressRequest) Reset()         { *m = AddressRequest{} }
func (m *AddressRequest) String() string { return proto.CompactTextString(m) }
func (*AddressRequest) ProtoMessage()    {}
func (*AddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9606996f3f4b5710, []int{0}
}

func (m *AddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressRequest.Unmarshal(m, b)
}
func (m *AddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressRequest.Marshal(b, m, deterministic)
}
func (m *AddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressRequest.Merge(m, src)
}
func (m *AddressRequest) XXX_Size() int {
	return xxx_messageInfo_AddressRequest.Size(m)
}
func (m *AddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddressRequest proto.InternalMessageInfo

func (m *AddressRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// fee request message
type FeeRequest struct {
	SendersPublicKey     string   `protobuf:"bytes,1,opt,name=sendersPublicKey,proto3" json:"sendersPublicKey,omitempty"`
	AssetId              string   `protobuf:"bytes,2,opt,name=assetId,proto3" json:"assetId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeeRequest) Reset()         { *m = FeeRequest{} }
func (m *FeeRequest) String() string { return proto.CompactTextString(m) }
func (*FeeRequest) ProtoMessage()    {}
func (*FeeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9606996f3f4b5710, []int{1}
}

func (m *FeeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeeRequest.Unmarshal(m, b)
}
func (m *FeeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeeRequest.Marshal(b, m, deterministic)
}
func (m *FeeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeeRequest.Merge(m, src)
}
func (m *FeeRequest) XXX_Size() int {
	return xxx_messageInfo_FeeRequest.Size(m)
}
func (m *FeeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FeeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FeeRequest proto.InternalMessageInfo

func (m *FeeRequest) GetSendersPublicKey() string {
	if m != nil {
		return m.SendersPublicKey
	}
	return ""
}

func (m *FeeRequest) GetAssetId() string {
	if m != nil {
		return m.AssetId
	}
	return ""
}

// The response message containing transaction's fee
type FeeReply struct {
	Fee                  string   `protobuf:"bytes,1,opt,name=fee,proto3" json:"fee,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeeReply) Reset()         { *m = FeeReply{} }
func (m *FeeReply) String() string { return proto.CompactTextString(m) }
func (*FeeReply) ProtoMessage()    {}
func (*FeeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_9606996f3f4b5710, []int{2}
}

func (m *FeeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeeReply.Unmarshal(m, b)
}
func (m *FeeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeeReply.Marshal(b, m, deterministic)
}
func (m *FeeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeeReply.Merge(m, src)
}
func (m *FeeReply) XXX_Size() int {
	return xxx_messageInfo_FeeReply.Size(m)
}
func (m *FeeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FeeReply.DiscardUnknown(m)
}

var xxx_messageInfo_FeeReply proto.InternalMessageInfo

func (m *FeeReply) GetFee() string {
	if m != nil {
		return m.Fee
	}
	return ""
}

// The response message containing account's balance with assets balances
type GetAllBalanceReply struct {
	Amount               string                             `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	AssetBalances        []*GetAllBalanceReply_AssetBalance `protobuf:"bytes,2,rep,name=assetBalances,proto3" json:"assetBalances,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *GetAllBalanceReply) Reset()         { *m = GetAllBalanceReply{} }
func (m *GetAllBalanceReply) String() string { return proto.CompactTextString(m) }
func (*GetAllBalanceReply) ProtoMessage()    {}
func (*GetAllBalanceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_9606996f3f4b5710, []int{3}
}

func (m *GetAllBalanceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllBalanceReply.Unmarshal(m, b)
}
func (m *GetAllBalanceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllBalanceReply.Marshal(b, m, deterministic)
}
func (m *GetAllBalanceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllBalanceReply.Merge(m, src)
}
func (m *GetAllBalanceReply) XXX_Size() int {
	return xxx_messageInfo_GetAllBalanceReply.Size(m)
}
func (m *GetAllBalanceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllBalanceReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllBalanceReply proto.InternalMessageInfo

func (m *GetAllBalanceReply) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *GetAllBalanceReply) GetAssetBalances() []*GetAllBalanceReply_AssetBalance {
	if m != nil {
		return m.AssetBalances
	}
	return nil
}

type GetAllBalanceReply_AssetBalance struct {
	AssetId              string   `protobuf:"bytes,1,opt,name=assetId,proto3" json:"assetId,omitempty"`
	Amount               string   `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllBalanceReply_AssetBalance) Reset()         { *m = GetAllBalanceReply_AssetBalance{} }
func (m *GetAllBalanceReply_AssetBalance) String() string { return proto.CompactTextString(m) }
func (*GetAllBalanceReply_AssetBalance) ProtoMessage()    {}
func (*GetAllBalanceReply_AssetBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_9606996f3f4b5710, []int{3, 0}
}

func (m *GetAllBalanceReply_AssetBalance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllBalanceReply_AssetBalance.Unmarshal(m, b)
}
func (m *GetAllBalanceReply_AssetBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllBalanceReply_AssetBalance.Marshal(b, m, deterministic)
}
func (m *GetAllBalanceReply_AssetBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllBalanceReply_AssetBalance.Merge(m, src)
}
func (m *GetAllBalanceReply_AssetBalance) XXX_Size() int {
	return xxx_messageInfo_GetAllBalanceReply_AssetBalance.Size(m)
}
func (m *GetAllBalanceReply_AssetBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllBalanceReply_AssetBalance.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllBalanceReply_AssetBalance proto.InternalMessageInfo

func (m *GetAllBalanceReply_AssetBalance) GetAssetId() string {
	if m != nil {
		return m.AssetId
	}
	return ""
}

func (m *GetAllBalanceReply_AssetBalance) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

// The response message containing result of address's validation
type ValidateAddressReply struct {
	Valid                bool     `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateAddressReply) Reset()         { *m = ValidateAddressReply{} }
func (m *ValidateAddressReply) String() string { return proto.CompactTextString(m) }
func (*ValidateAddressReply) ProtoMessage()    {}
func (*ValidateAddressReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_9606996f3f4b5710, []int{4}
}

func (m *ValidateAddressReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateAddressReply.Unmarshal(m, b)
}
func (m *ValidateAddressReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateAddressReply.Marshal(b, m, deterministic)
}
func (m *ValidateAddressReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateAddressReply.Merge(m, src)
}
func (m *ValidateAddressReply) XXX_Size() int {
	return xxx_messageInfo_ValidateAddressReply.Size(m)
}
func (m *ValidateAddressReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateAddressReply.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateAddressReply proto.InternalMessageInfo

func (m *ValidateAddressReply) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

// The request message for raw transaction creation
type RawTransactionRequest struct {
	AddressFrom          string   `protobuf:"bytes,1,opt,name=addressFrom,proto3" json:"addressFrom,omitempty"`
	SendersPublicKey     string   `protobuf:"bytes,2,opt,name=sendersPublicKey,proto3" json:"sendersPublicKey,omitempty"`
	AddressTo            string   `protobuf:"bytes,3,opt,name=addressTo,proto3" json:"addressTo,omitempty"`
	Amount               string   `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	AssetId              string   `protobuf:"bytes,5,opt,name=assetId,proto3" json:"assetId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RawTransactionRequest) Reset()         { *m = RawTransactionRequest{} }
func (m *RawTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*RawTransactionRequest) ProtoMessage()    {}
func (*RawTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9606996f3f4b5710, []int{5}
}

func (m *RawTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawTransactionRequest.Unmarshal(m, b)
}
func (m *RawTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawTransactionRequest.Marshal(b, m, deterministic)
}
func (m *RawTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawTransactionRequest.Merge(m, src)
}
func (m *RawTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_RawTransactionRequest.Size(m)
}
func (m *RawTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RawTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RawTransactionRequest proto.InternalMessageInfo

func (m *RawTransactionRequest) GetAddressFrom() string {
	if m != nil {
		return m.AddressFrom
	}
	return ""
}

func (m *RawTransactionRequest) GetSendersPublicKey() string {
	if m != nil {
		return m.SendersPublicKey
	}
	return ""
}

func (m *RawTransactionRequest) GetAddressTo() string {
	if m != nil {
		return m.AddressTo
	}
	return ""
}

func (m *RawTransactionRequest) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *RawTransactionRequest) GetAssetId() string {
	if m != nil {
		return m.AssetId
	}
	return ""
}

// The request message for raw transaction with many recipients creation
type RawMassTransactionRequest struct {
	AddressFrom          string                           `protobuf:"bytes,1,opt,name=addressFrom,proto3" json:"addressFrom,omitempty"`
	SendersPublicKey     string                           `protobuf:"bytes,2,opt,name=sendersPublicKey,proto3" json:"sendersPublicKey,omitempty"`
	AssetId              string                           `protobuf:"bytes,5,opt,name=assetId,proto3" json:"assetId,omitempty"`
	Outs                 []*RawMassTransactionRequest_Out `protobuf:"bytes,6,rep,name=outs,proto3" json:"outs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *RawMassTransactionRequest) Reset()         { *m = RawMassTransactionRequest{} }
func (m *RawMassTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*RawMassTransactionRequest) ProtoMessage()    {}
func (*RawMassTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9606996f3f4b5710, []int{6}
}

func (m *RawMassTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawMassTransactionRequest.Unmarshal(m, b)
}
func (m *RawMassTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawMassTransactionRequest.Marshal(b, m, deterministic)
}
func (m *RawMassTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawMassTransactionRequest.Merge(m, src)
}
func (m *RawMassTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_RawMassTransactionRequest.Size(m)
}
func (m *RawMassTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RawMassTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RawMassTransactionRequest proto.InternalMessageInfo

func (m *RawMassTransactionRequest) GetAddressFrom() string {
	if m != nil {
		return m.AddressFrom
	}
	return ""
}

func (m *RawMassTransactionRequest) GetSendersPublicKey() string {
	if m != nil {
		return m.SendersPublicKey
	}
	return ""
}

func (m *RawMassTransactionRequest) GetAssetId() string {
	if m != nil {
		return m.AssetId
	}
	return ""
}

func (m *RawMassTransactionRequest) GetOuts() []*RawMassTransactionRequest_Out {
	if m != nil {
		return m.Outs
	}
	return nil
}

type RawMassTransactionRequest_Out struct {
	AddressTo            string   `protobuf:"bytes,1,opt,name=addressTo,proto3" json:"addressTo,omitempty"`
	Amount               string   `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RawMassTransactionRequest_Out) Reset()         { *m = RawMassTransactionRequest_Out{} }
func (m *RawMassTransactionRequest_Out) String() string { return proto.CompactTextString(m) }
func (*RawMassTransactionRequest_Out) ProtoMessage()    {}
func (*RawMassTransactionRequest_Out) Descriptor() ([]byte, []int) {
	return fileDescriptor_9606996f3f4b5710, []int{6, 0}
}

func (m *RawMassTransactionRequest_Out) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawMassTransactionRequest_Out.Unmarshal(m, b)
}
func (m *RawMassTransactionRequest_Out) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawMassTransactionRequest_Out.Marshal(b, m, deterministic)
}
func (m *RawMassTransactionRequest_Out) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawMassTransactionRequest_Out.Merge(m, src)
}
func (m *RawMassTransactionRequest_Out) XXX_Size() int {
	return xxx_messageInfo_RawMassTransactionRequest_Out.Size(m)
}
func (m *RawMassTransactionRequest_Out) XXX_DiscardUnknown() {
	xxx_messageInfo_RawMassTransactionRequest_Out.DiscardUnknown(m)
}

var xxx_messageInfo_RawMassTransactionRequest_Out proto.InternalMessageInfo

func (m *RawMassTransactionRequest_Out) GetAddressTo() string {
	if m != nil {
		return m.AddressTo
	}
	return ""
}

func (m *RawMassTransactionRequest_Out) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

// The response message containing raw transaction
type RawTransactionReply struct {
	Tx                   []byte   `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RawTransactionReply) Reset()         { *m = RawTransactionReply{} }
func (m *RawTransactionReply) String() string { return proto.CompactTextString(m) }
func (*RawTransactionReply) ProtoMessage()    {}
func (*RawTransactionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_9606996f3f4b5710, []int{7}
}

func (m *RawTransactionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawTransactionReply.Unmarshal(m, b)
}
func (m *RawTransactionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawTransactionReply.Marshal(b, m, deterministic)
}
func (m *RawTransactionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawTransactionReply.Merge(m, src)
}
func (m *RawTransactionReply) XXX_Size() int {
	return xxx_messageInfo_RawTransactionReply.Size(m)
}
func (m *RawTransactionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RawTransactionReply.DiscardUnknown(m)
}

var xxx_messageInfo_RawTransactionReply proto.InternalMessageInfo

func (m *RawTransactionReply) GetTx() []byte {
	if m != nil {
		return m.Tx
	}
	return nil
}

// The request message for singing transaction
type SendTransactionRequest struct {
	Tx                   []byte   `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendTransactionRequest) Reset()         { *m = SendTransactionRequest{} }
func (m *SendTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SendTransactionRequest) ProtoMessage()    {}
func (*SendTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9606996f3f4b5710, []int{8}
}

func (m *SendTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionRequest.Unmarshal(m, b)
}
func (m *SendTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionRequest.Marshal(b, m, deterministic)
}
func (m *SendTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionRequest.Merge(m, src)
}
func (m *SendTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SendTransactionRequest.Size(m)
}
func (m *SendTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionRequest proto.InternalMessageInfo

func (m *SendTransactionRequest) GetTx() []byte {
	if m != nil {
		return m.Tx
	}
	return nil
}

// The response message containing transaction's id
type SendTransactionReply struct {
	TxId                 string   `protobuf:"bytes,1,opt,name=txId,proto3" json:"txId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendTransactionReply) Reset()         { *m = SendTransactionReply{} }
func (m *SendTransactionReply) String() string { return proto.CompactTextString(m) }
func (*SendTransactionReply) ProtoMessage()    {}
func (*SendTransactionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_9606996f3f4b5710, []int{9}
}

func (m *SendTransactionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionReply.Unmarshal(m, b)
}
func (m *SendTransactionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionReply.Marshal(b, m, deterministic)
}
func (m *SendTransactionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionReply.Merge(m, src)
}
func (m *SendTransactionReply) XXX_Size() int {
	return xxx_messageInfo_SendTransactionReply.Size(m)
}
func (m *SendTransactionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionReply.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionReply proto.InternalMessageInfo

func (m *SendTransactionReply) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

// The request message for getting transaction by hash
type TransactionByHashRequest struct {
	TxHash               string   `protobuf:"bytes,1,opt,name=txHash,proto3" json:"txHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionByHashRequest) Reset()         { *m = TransactionByHashRequest{} }
func (m *TransactionByHashRequest) String() string { return proto.CompactTextString(m) }
func (*TransactionByHashRequest) ProtoMessage()    {}
func (*TransactionByHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9606996f3f4b5710, []int{10}
}

func (m *TransactionByHashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionByHashRequest.Unmarshal(m, b)
}
func (m *TransactionByHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionByHashRequest.Marshal(b, m, deterministic)
}
func (m *TransactionByHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionByHashRequest.Merge(m, src)
}
func (m *TransactionByHashRequest) XXX_Size() int {
	return xxx_messageInfo_TransactionByHashRequest.Size(m)
}
func (m *TransactionByHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionByHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionByHashRequest proto.InternalMessageInfo

func (m *TransactionByHashRequest) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

// The response message for getting transaction by hash
type TransactionByHashReply struct {
	SenderAddress        string         `protobuf:"bytes,1,opt,name=senderAddress,proto3" json:"senderAddress,omitempty"`
	SendersPublicKey     string         `protobuf:"bytes,2,opt,name=sendersPublicKey,proto3" json:"sendersPublicKey,omitempty"`
	RecipientAddress     string         `protobuf:"bytes,3,opt,name=recipientAddress,proto3" json:"recipientAddress,omitempty"`
	Amount               string         `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	AssetId              string         `protobuf:"bytes,5,opt,name=assetId,proto3" json:"assetId,omitempty"`
	TxHash               string         `protobuf:"bytes,6,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Fee                  string         `protobuf:"bytes,7,opt,name=fee,proto3" json:"fee,omitempty"`
	Data                 []byte         `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
	Status               string         `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	Inputs               []*InputOutput `protobuf:"bytes,10,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs              []*InputOutput `protobuf:"bytes,11,rep,name=outputs,proto3" json:"outputs,omitempty"`
	AssetAmount          string         `protobuf:"bytes,12,opt,name=assetAmount,proto3" json:"assetAmount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TransactionByHashReply) Reset()         { *m = TransactionByHashReply{} }
func (m *TransactionByHashReply) String() string { return proto.CompactTextString(m) }
func (*TransactionByHashReply) ProtoMessage()    {}
func (*TransactionByHashReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_9606996f3f4b5710, []int{11}
}

func (m *TransactionByHashReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionByHashReply.Unmarshal(m, b)
}
func (m *TransactionByHashReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionByHashReply.Marshal(b, m, deterministic)
}
func (m *TransactionByHashReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionByHashReply.Merge(m, src)
}
func (m *TransactionByHashReply) XXX_Size() int {
	return xxx_messageInfo_TransactionByHashReply.Size(m)
}
func (m *TransactionByHashReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionByHashReply.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionByHashReply proto.InternalMessageInfo

func (m *TransactionByHashReply) GetSenderAddress() string {
	if m != nil {
		return m.SenderAddress
	}
	return ""
}

func (m *TransactionByHashReply) GetSendersPublicKey() string {
	if m != nil {
		return m.SendersPublicKey
	}
	return ""
}

func (m *TransactionByHashReply) GetRecipientAddress() string {
	if m != nil {
		return m.RecipientAddress
	}
	return ""
}

func (m *TransactionByHashReply) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *TransactionByHashReply) GetAssetId() string {
	if m != nil {
		return m.AssetId
	}
	return ""
}

func (m *TransactionByHashReply) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *TransactionByHashReply) GetFee() string {
	if m != nil {
		return m.Fee
	}
	return ""
}

func (m *TransactionByHashReply) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TransactionByHashReply) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TransactionByHashReply) GetInputs() []*InputOutput {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *TransactionByHashReply) GetOutputs() []*InputOutput {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *TransactionByHashReply) GetAssetAmount() string {
	if m != nil {
		return m.AssetAmount
	}
	return ""
}

type InputOutput struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Amount               string   `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InputOutput) Reset()         { *m = InputOutput{} }
func (m *InputOutput) String() string { return proto.CompactTextString(m) }
func (*InputOutput) ProtoMessage()    {}
func (*InputOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_9606996f3f4b5710, []int{12}
}

func (m *InputOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InputOutput.Unmarshal(m, b)
}
func (m *InputOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InputOutput.Marshal(b, m, deterministic)
}
func (m *InputOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InputOutput.Merge(m, src)
}
func (m *InputOutput) XXX_Size() int {
	return xxx_messageInfo_InputOutput.Size(m)
}
func (m *InputOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_InputOutput.DiscardUnknown(m)
}

var xxx_messageInfo_InputOutput proto.InternalMessageInfo

func (m *InputOutput) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *InputOutput) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

type GetAllBalanceRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Contracts            []string `protobuf:"bytes,2,rep,name=contracts,proto3" json:"contracts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllBalanceRequest) Reset()         { *m = GetAllBalanceRequest{} }
func (m *GetAllBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllBalanceRequest) ProtoMessage()    {}
func (*GetAllBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9606996f3f4b5710, []int{13}
}

func (m *GetAllBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllBalanceRequest.Unmarshal(m, b)
}
func (m *GetAllBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllBalanceRequest.Marshal(b, m, deterministic)
}
func (m *GetAllBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllBalanceRequest.Merge(m, src)
}
func (m *GetAllBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllBalanceRequest.Size(m)
}
func (m *GetAllBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllBalanceRequest proto.InternalMessageInfo

func (m *GetAllBalanceRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GetAllBalanceRequest) GetContracts() []string {
	if m != nil {
		return m.Contracts
	}
	return nil
}

type GetUnspentInputsReply struct {
	Utxo                 []*UnspentInput `protobuf:"bytes,1,rep,name=utxo,proto3" json:"utxo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetUnspentInputsReply) Reset()         { *m = GetUnspentInputsReply{} }
func (m *GetUnspentInputsReply) String() string { return proto.CompactTextString(m) }
func (*GetUnspentInputsReply) ProtoMessage()    {}
func (*GetUnspentInputsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_9606996f3f4b5710, []int{14}
}

func (m *GetUnspentInputsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUnspentInputsReply.Unmarshal(m, b)
}
func (m *GetUnspentInputsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUnspentInputsReply.Marshal(b, m, deterministic)
}
func (m *GetUnspentInputsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUnspentInputsReply.Merge(m, src)
}
func (m *GetUnspentInputsReply) XXX_Size() int {
	return xxx_messageInfo_GetUnspentInputsReply.Size(m)
}
func (m *GetUnspentInputsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUnspentInputsReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetUnspentInputsReply proto.InternalMessageInfo

func (m *GetUnspentInputsReply) GetUtxo() []*UnspentInput {
	if m != nil {
		return m.Utxo
	}
	return nil
}

type UnspentInput struct {
	TxId                 string   `protobuf:"bytes,1,opt,name=TxId,proto3" json:"TxId,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	Vout                 uint32   `protobuf:"varint,3,opt,name=Vout,proto3" json:"Vout,omitempty"`
	ScriptPubKey         string   `protobuf:"bytes,4,opt,name=ScriptPubKey,proto3" json:"ScriptPubKey,omitempty"`
	Amount               float32  `protobuf:"fixed32,5,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Satoshis             uint32   `protobuf:"varint,6,opt,name=Satoshis,proto3" json:"Satoshis,omitempty"`
	Height               uint32   `protobuf:"varint,7,opt,name=Height,proto3" json:"Height,omitempty"`
	Confirmations        uint32   `protobuf:"varint,8,opt,name=Confirmations,proto3" json:"Confirmations,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnspentInput) Reset()         { *m = UnspentInput{} }
func (m *UnspentInput) String() string { return proto.CompactTextString(m) }
func (*UnspentInput) ProtoMessage()    {}
func (*UnspentInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_9606996f3f4b5710, []int{15}
}

func (m *UnspentInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnspentInput.Unmarshal(m, b)
}
func (m *UnspentInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnspentInput.Marshal(b, m, deterministic)
}
func (m *UnspentInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnspentInput.Merge(m, src)
}
func (m *UnspentInput) XXX_Size() int {
	return xxx_messageInfo_UnspentInput.Size(m)
}
func (m *UnspentInput) XXX_DiscardUnknown() {
	xxx_messageInfo_UnspentInput.DiscardUnknown(m)
}

var xxx_messageInfo_UnspentInput proto.InternalMessageInfo

func (m *UnspentInput) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *UnspentInput) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *UnspentInput) GetVout() uint32 {
	if m != nil {
		return m.Vout
	}
	return 0
}

func (m *UnspentInput) GetScriptPubKey() string {
	if m != nil {
		return m.ScriptPubKey
	}
	return ""
}

func (m *UnspentInput) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *UnspentInput) GetSatoshis() uint32 {
	if m != nil {
		return m.Satoshis
	}
	return 0
}

func (m *UnspentInput) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *UnspentInput) GetConfirmations() uint32 {
	if m != nil {
		return m.Confirmations
	}
	return 0
}

func init() {
	proto.RegisterType((*AddressRequest)(nil), "blockchain.AddressRequest")
	proto.RegisterType((*FeeRequest)(nil), "blockchain.FeeRequest")
	proto.RegisterType((*FeeReply)(nil), "blockchain.FeeReply")
	proto.RegisterType((*GetAllBalanceReply)(nil), "blockchain.GetAllBalanceReply")
	proto.RegisterType((*GetAllBalanceReply_AssetBalance)(nil), "blockchain.GetAllBalanceReply.AssetBalance")
	proto.RegisterType((*ValidateAddressReply)(nil), "blockchain.ValidateAddressReply")
	proto.RegisterType((*RawTransactionRequest)(nil), "blockchain.RawTransactionRequest")
	proto.RegisterType((*RawMassTransactionRequest)(nil), "blockchain.RawMassTransactionRequest")
	proto.RegisterType((*RawMassTransactionRequest_Out)(nil), "blockchain.RawMassTransactionRequest.Out")
	proto.RegisterType((*RawTransactionReply)(nil), "blockchain.RawTransactionReply")
	proto.RegisterType((*SendTransactionRequest)(nil), "blockchain.SendTransactionRequest")
	proto.RegisterType((*SendTransactionReply)(nil), "blockchain.SendTransactionReply")
	proto.RegisterType((*TransactionByHashRequest)(nil), "blockchain.TransactionByHashRequest")
	proto.RegisterType((*TransactionByHashReply)(nil), "blockchain.TransactionByHashReply")
	proto.RegisterType((*InputOutput)(nil), "blockchain.InputOutput")
	proto.RegisterType((*GetAllBalanceRequest)(nil), "blockchain.GetAllBalanceRequest")
	proto.RegisterType((*GetUnspentInputsReply)(nil), "blockchain.GetUnspentInputsReply")
	proto.RegisterType((*UnspentInput)(nil), "blockchain.UnspentInput")
}

func init() { proto.RegisterFile("ergo_adapter.proto", fileDescriptor_9606996f3f4b5710) }

var fileDescriptor_9606996f3f4b5710 = []byte{
	// 889 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xef, 0x6e, 0xdb, 0x36,
	0x10, 0xb7, 0x6c, 0xd7, 0xb1, 0xcf, 0x76, 0xea, 0x72, 0xae, 0xa7, 0x09, 0xc5, 0xe6, 0x12, 0x2d,
	0x90, 0x79, 0x85, 0x87, 0x65, 0xd8, 0xa7, 0x61, 0xd8, 0xdc, 0x61, 0x49, 0x8b, 0x61, 0x4d, 0x4b,
	0x67, 0x05, 0xf2, 0x29, 0xa0, 0x25, 0x26, 0x16, 0xe6, 0x48, 0x9a, 0x48, 0x2d, 0xce, 0x13, 0xec,
	0x45, 0xf6, 0x0a, 0x7b, 0x80, 0xbd, 0xcc, 0x5e, 0x63, 0x03, 0x29, 0xca, 0xa6, 0x24, 0xdb, 0x49,
	0x3e, 0xf4, 0x1b, 0xef, 0x74, 0x77, 0xbc, 0x3f, 0xbf, 0xfb, 0x51, 0x80, 0x58, 0x7c, 0x19, 0x9e,
	0x53, 0x8f, 0x46, 0x82, 0xc5, 0xe3, 0x28, 0x0e, 0x45, 0x88, 0x60, 0xb6, 0x08, 0xdd, 0xdf, 0xdc,
	0x39, 0xf5, 0x03, 0x3c, 0x82, 0xfd, 0x89, 0xe7, 0xc5, 0x8c, 0x73, 0xc2, 0x7e, 0x4f, 0x18, 0x17,
	0xc8, 0x86, 0x3d, 0x9a, 0x6a, 0x6c, 0x6b, 0x68, 0x1d, 0xb4, 0x48, 0x26, 0x62, 0x02, 0x70, 0xc4,
	0x58, 0x66, 0x37, 0x82, 0x1e, 0x67, 0x81, 0xc7, 0x62, 0xfe, 0x36, 0x99, 0x2d, 0x7c, 0xf7, 0x67,
	0x76, 0xa3, 0x1d, 0x4a, 0x7a, 0x15, 0x93, 0x73, 0x26, 0x5e, 0x7b, 0x76, 0x55, 0xc7, 0x4c, 0x45,
	0xfc, 0x04, 0x9a, 0x2a, 0x66, 0xb4, 0xb8, 0x41, 0x3d, 0xa8, 0x5d, 0x30, 0xa6, 0x83, 0xc8, 0x23,
	0xfe, 0xc7, 0x02, 0x74, 0xcc, 0xc4, 0x64, 0xb1, 0x78, 0x49, 0x17, 0x34, 0x70, 0xb5, 0xe1, 0x00,
	0x1a, 0xf4, 0x2a, 0x4c, 0x02, 0xa1, 0x6d, 0xb5, 0x84, 0xde, 0x41, 0x57, 0xc5, 0xd5, 0xc6, 0xdc,
	0xae, 0x0e, 0x6b, 0x07, 0xed, 0xc3, 0x2f, 0xc6, 0xeb, 0x82, 0xc7, 0xe5, 0x70, 0xe3, 0x89, 0xe1,
	0x43, 0xf2, 0x11, 0x9c, 0x1f, 0xa0, 0x63, 0x7e, 0x36, 0x2b, 0xb1, 0x72, 0x95, 0x18, 0x49, 0x55,
	0xcd, 0xa4, 0xf0, 0x0b, 0xe8, 0xbf, 0xa7, 0x0b, 0xdf, 0xa3, 0x82, 0xad, 0x3a, 0x2d, 0x8b, 0xe8,
	0xc3, 0x83, 0x3f, 0xa4, 0x5e, 0xc5, 0x69, 0x92, 0x54, 0xc0, 0x7f, 0x5b, 0xf0, 0x98, 0xd0, 0xeb,
	0xd3, 0x98, 0x06, 0x9c, 0xba, 0xc2, 0x0f, 0x83, 0xac, 0xdf, 0x43, 0x68, 0xeb, 0x41, 0x1c, 0xc5,
	0xe1, 0x95, 0xbe, 0xdd, 0x54, 0x6d, 0x9c, 0x48, 0x75, 0xcb, 0x44, 0x9e, 0x40, 0x4b, 0xbb, 0x9e,
	0x86, 0x76, 0x4d, 0x19, 0xad, 0x15, 0x46, 0x2d, 0xf5, 0x5c, 0x83, 0x8d, 0xea, 0x1f, 0xe4, 0xe7,
	0xf8, 0x9f, 0x05, 0x9f, 0x10, 0x7a, 0xfd, 0x0b, 0xe5, 0xfc, 0x83, 0xe7, 0xbe, 0x35, 0x0b, 0xf4,
	0x1d, 0xd4, 0xc3, 0x44, 0x70, 0xbb, 0xa1, 0xe6, 0xfe, 0xb9, 0x39, 0xf7, 0xad, 0xc9, 0x8d, 0x4f,
	0x12, 0x41, 0x94, 0x9b, 0xf3, 0x2d, 0xd4, 0x4e, 0x12, 0x91, 0xef, 0x8d, 0xb5, 0xbd, 0x37, 0xf9,
	0x39, 0x3f, 0x87, 0x8f, 0x8a, 0x83, 0x93, 0x63, 0xde, 0x87, 0xaa, 0x58, 0xaa, 0x28, 0x1d, 0x52,
	0x15, 0x4b, 0x7c, 0x00, 0x83, 0x29, 0x0b, 0xbc, 0x0d, 0x4d, 0x2a, 0x5a, 0x8e, 0xa0, 0x5f, 0xb2,
	0x94, 0x11, 0x11, 0xd4, 0xc5, 0x72, 0x85, 0x3f, 0x75, 0xc6, 0x87, 0x60, 0x1b, 0x76, 0x2f, 0x6f,
	0x5e, 0x51, 0x3e, 0xcf, 0xe2, 0x0e, 0xa0, 0x21, 0x96, 0x52, 0x91, 0x6d, 0x4b, 0x2a, 0xe1, 0xbf,
	0x6a, 0x30, 0xd8, 0xe0, 0x24, 0xaf, 0x78, 0x06, 0xdd, 0xb4, 0xeb, 0x93, 0x1c, 0x13, 0xe4, 0x95,
	0xf7, 0x9a, 0xd9, 0x08, 0x7a, 0x31, 0x73, 0xfd, 0xc8, 0x67, 0x81, 0xc8, 0x82, 0xa6, 0xb0, 0x2b,
	0xe9, 0xef, 0x8f, 0x3e, 0xa3, 0xc4, 0x86, 0x59, 0x62, 0xc6, 0x28, 0x7b, 0x2b, 0x46, 0x91, 0xcd,
	0xf3, 0xa8, 0xa0, 0x76, 0x53, 0xb5, 0x59, 0x9d, 0xa5, 0x37, 0x17, 0x54, 0x24, 0xdc, 0x6e, 0xa5,
	0xde, 0xa9, 0x84, 0xbe, 0x84, 0x86, 0x1f, 0x44, 0x12, 0x4f, 0xa0, 0xf0, 0xf4, 0xb1, 0x89, 0xa7,
	0xd7, 0xf2, 0xcb, 0x49, 0x22, 0xa2, 0x44, 0x10, 0x6d, 0x86, 0xbe, 0x82, 0xbd, 0x50, 0x69, 0xb8,
	0xdd, 0xde, 0xed, 0x91, 0xd9, 0xa9, 0xcd, 0x90, 0x45, 0x4c, 0xd2, 0x82, 0x3b, 0x7a, 0x33, 0xd6,
	0x2a, 0xfc, 0x3d, 0xb4, 0x0d, 0xcf, 0xed, 0xf4, 0xbc, 0x15, 0x98, 0x6f, 0xa0, 0x5f, 0x20, 0xbd,
	0x5b, 0x88, 0x5e, 0x2e, 0x80, 0x1b, 0x06, 0x22, 0xa6, 0xae, 0x48, 0x39, 0xb4, 0x45, 0xd6, 0x0a,
	0xfc, 0x13, 0x3c, 0x3e, 0x66, 0xe2, 0xd7, 0x80, 0x47, 0x2c, 0x10, 0x2a, 0x35, 0xcd, 0x68, 0x2f,
	0xa0, 0x9e, 0x88, 0xa5, 0x5c, 0x19, 0x59, 0xbb, 0x6d, 0xd6, 0x6e, 0x5a, 0x13, 0x65, 0x85, 0xff,
	0xb5, 0xa0, 0x63, 0xaa, 0xe5, 0x68, 0x4e, 0x0d, 0x5c, 0xcb, 0xb3, 0xcc, 0x31, 0x43, 0x8b, 0x7e,
	0x38, 0x32, 0x90, 0x20, 0xa8, 0xbf, 0x0f, 0x13, 0xa1, 0x40, 0xd4, 0x25, 0xea, 0x8c, 0x30, 0x74,
	0xa6, 0x6e, 0xec, 0x47, 0xe2, 0x6d, 0x32, 0x93, 0x60, 0x4c, 0xe1, 0x93, 0xd3, 0xc9, 0x2e, 0xe9,
	0x5e, 0x4b, 0x0c, 0x55, 0x89, 0x96, 0x90, 0x03, 0xcd, 0x29, 0x15, 0x21, 0x9f, 0xfb, 0x5c, 0x81,
	0xa8, 0x4b, 0x56, 0xb2, 0xf4, 0x79, 0xc5, 0xfc, 0xcb, 0xb9, 0x50, 0x48, 0xea, 0x12, 0x2d, 0xc9,
	0x35, 0xf9, 0x31, 0x0c, 0x2e, 0xfc, 0xf8, 0x8a, 0xca, 0x0d, 0xe2, 0x0a, 0x55, 0x5d, 0x92, 0x57,
	0x1e, 0xfe, 0xd9, 0x90, 0x45, 0xa8, 0x07, 0x18, 0xbd, 0x83, 0x87, 0x85, 0xc7, 0x00, 0x39, 0x66,
	0x9f, 0xf2, 0x6f, 0xb1, 0x33, 0x34, 0xbf, 0x6d, 0x7a, 0x45, 0x70, 0x05, 0x7d, 0x03, 0xb5, 0x23,
	0xc6, 0xd0, 0xc0, 0x34, 0x5d, 0x3f, 0xd3, 0x4e, 0xbf, 0xa4, 0x4f, 0xdd, 0xde, 0xc0, 0x7e, 0x0e,
	0x15, 0xbb, 0x13, 0xf9, 0x74, 0xf7, 0x13, 0x8a, 0x2b, 0xe8, 0x0c, 0x1e, 0x1d, 0x33, 0x91, 0x67,
	0x40, 0xf4, 0xb4, 0xc0, 0xc0, 0x65, 0xd6, 0x73, 0x3e, 0xdb, 0x65, 0x92, 0x86, 0xa6, 0x0a, 0x70,
	0x65, 0x02, 0x47, 0xcf, 0xef, 0x44, 0xf0, 0x77, 0xb9, 0xe2, 0x0c, 0x1e, 0x16, 0xb8, 0x16, 0x61,
	0xd3, 0x6b, 0x33, 0x65, 0xe7, 0xe7, 0xb3, 0x89, 0xac, 0x71, 0x05, 0x9d, 0xc3, 0xa3, 0x12, 0xcb,
	0xa2, 0x67, 0xa6, 0xe3, 0x36, 0xe6, 0x76, 0xf0, 0x2d, 0x56, 0xe9, 0x05, 0x53, 0xe8, 0xe6, 0x26,
	0x82, 0x86, 0x3b, 0x86, 0x75, 0xd7, 0x71, 0x4e, 0xa1, 0x57, 0x5c, 0xf2, 0x9d, 0x00, 0x79, 0x5a,
	0x88, 0x58, 0xa6, 0x07, 0x5c, 0x99, 0x35, 0xd4, 0xff, 0xe7, 0xd7, 0xff, 0x07, 0x00, 0x00, 0xff,
	0xff, 0x0f, 0x4c, 0x78, 0x0b, 0x95, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AdapterClient is the client API for Adapter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdapterClient interface {
	// Validate address
	ValidateAddress(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*ValidateAddressReply, error)
	// Get transaction's fee
	Fee(ctx context.Context, in *FeeRequest, opts ...grpc.CallOption) (*FeeReply, error)
	// Get account's balance with assets balances
	GetAllBalances(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*GetAllBalanceReply, error)
	// request to create raw transaction
	GetRawTransaction(ctx context.Context, in *RawTransactionRequest, opts ...grpc.CallOption) (*RawTransactionReply, error)
	// request to create raw transaction with many recipients
	GetRawMassTransaction(ctx context.Context, in *RawMassTransactionRequest, opts ...grpc.CallOption) (*RawTransactionReply, error)
	// Send transaction
	SendTransaction(ctx context.Context, in *SendTransactionRequest, opts ...grpc.CallOption) (*SendTransactionReply, error)
	// Get transaction
	TransactionByHash(ctx context.Context, in *TransactionByHashRequest, opts ...grpc.CallOption) (*TransactionByHashReply, error)
	GetAllBalance(ctx context.Context, in *GetAllBalanceRequest, opts ...grpc.CallOption) (*GetAllBalanceReply, error)
	GetUnspentInputs(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*GetUnspentInputsReply, error)
}

type adapterClient struct {
	cc *grpc.ClientConn
}

func NewAdapterClient(cc *grpc.ClientConn) AdapterClient {
	return &adapterClient{cc}
}

func (c *adapterClient) ValidateAddress(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*ValidateAddressReply, error) {
	out := new(ValidateAddressReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/ValidateAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) Fee(ctx context.Context, in *FeeRequest, opts ...grpc.CallOption) (*FeeReply, error) {
	out := new(FeeReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/Fee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) GetAllBalances(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*GetAllBalanceReply, error) {
	out := new(GetAllBalanceReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/GetAllBalances", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) GetRawTransaction(ctx context.Context, in *RawTransactionRequest, opts ...grpc.CallOption) (*RawTransactionReply, error) {
	out := new(RawTransactionReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/GetRawTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) GetRawMassTransaction(ctx context.Context, in *RawMassTransactionRequest, opts ...grpc.CallOption) (*RawTransactionReply, error) {
	out := new(RawTransactionReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/GetRawMassTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) SendTransaction(ctx context.Context, in *SendTransactionRequest, opts ...grpc.CallOption) (*SendTransactionReply, error) {
	out := new(SendTransactionReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/SendTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) TransactionByHash(ctx context.Context, in *TransactionByHashRequest, opts ...grpc.CallOption) (*TransactionByHashReply, error) {
	out := new(TransactionByHashReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/TransactionByHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) GetAllBalance(ctx context.Context, in *GetAllBalanceRequest, opts ...grpc.CallOption) (*GetAllBalanceReply, error) {
	out := new(GetAllBalanceReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/GetAllBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) GetUnspentInputs(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*GetUnspentInputsReply, error) {
	out := new(GetUnspentInputsReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/GetUnspentInputs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdapterServer is the server API for Adapter service.
type AdapterServer interface {
	// Validate address
	ValidateAddress(context.Context, *AddressRequest) (*ValidateAddressReply, error)
	// Get transaction's fee
	Fee(context.Context, *FeeRequest) (*FeeReply, error)
	// Get account's balance with assets balances
	GetAllBalances(context.Context, *AddressRequest) (*GetAllBalanceReply, error)
	// request to create raw transaction
	GetRawTransaction(context.Context, *RawTransactionRequest) (*RawTransactionReply, error)
	// request to create raw transaction with many recipients
	GetRawMassTransaction(context.Context, *RawMassTransactionRequest) (*RawTransactionReply, error)
	// Send transaction
	SendTransaction(context.Context, *SendTransactionRequest) (*SendTransactionReply, error)
	// Get transaction
	TransactionByHash(context.Context, *TransactionByHashRequest) (*TransactionByHashReply, error)
	GetAllBalance(context.Context, *GetAllBalanceRequest) (*GetAllBalanceReply, error)
	GetUnspentInputs(context.Context, *AddressRequest) (*GetUnspentInputsReply, error)
}

// UnimplementedAdapterServer can be embedded to have forward compatible implementations.
type UnimplementedAdapterServer struct {
}

func (*UnimplementedAdapterServer) ValidateAddress(ctx context.Context, req *AddressRequest) (*ValidateAddressReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateAddress not implemented")
}
func (*UnimplementedAdapterServer) Fee(ctx context.Context, req *FeeRequest) (*FeeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Fee not implemented")
}
func (*UnimplementedAdapterServer) GetAllBalances(ctx context.Context, req *AddressRequest) (*GetAllBalanceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllBalances not implemented")
}
func (*UnimplementedAdapterServer) GetRawTransaction(ctx context.Context, req *RawTransactionRequest) (*RawTransactionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRawTransaction not implemented")
}
func (*UnimplementedAdapterServer) GetRawMassTransaction(ctx context.Context, req *RawMassTransactionRequest) (*RawTransactionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRawMassTransaction not implemented")
}
func (*UnimplementedAdapterServer) SendTransaction(ctx context.Context, req *SendTransactionRequest) (*SendTransactionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendTransaction not implemented")
}
func (*UnimplementedAdapterServer) TransactionByHash(ctx context.Context, req *TransactionByHashRequest) (*TransactionByHashReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransactionByHash not implemented")
}
func (*UnimplementedAdapterServer) GetAllBalance(ctx context.Context, req *GetAllBalanceRequest) (*GetAllBalanceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllBalance not implemented")
}
func (*UnimplementedAdapterServer) GetUnspentInputs(ctx context.Context, req *AddressRequest) (*GetUnspentInputsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUnspentInputs not implemented")
}

func RegisterAdapterServer(s *grpc.Server, srv AdapterServer) {
	s.RegisterService(&_Adapter_serviceDesc, srv)
}

func _Adapter_ValidateAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).ValidateAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/ValidateAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).ValidateAddress(ctx, req.(*AddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_Fee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FeeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).Fee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/Fee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).Fee(ctx, req.(*FeeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_GetAllBalances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).GetAllBalances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/GetAllBalances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).GetAllBalances(ctx, req.(*AddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_GetRawTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RawTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).GetRawTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/GetRawTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).GetRawTransaction(ctx, req.(*RawTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_GetRawMassTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RawMassTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).GetRawMassTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/GetRawMassTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).GetRawMassTransaction(ctx, req.(*RawMassTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_SendTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).SendTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/SendTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).SendTransaction(ctx, req.(*SendTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_TransactionByHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionByHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).TransactionByHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/TransactionByHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).TransactionByHash(ctx, req.(*TransactionByHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_GetAllBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).GetAllBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/GetAllBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).GetAllBalance(ctx, req.(*GetAllBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_GetUnspentInputs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).GetUnspentInputs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/GetUnspentInputs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).GetUnspentInputs(ctx, req.(*AddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Adapter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "blockchain.Adapter",
	HandlerType: (*AdapterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ValidateAddress",
			Handler:    _Adapter_ValidateAddress_Handler,
		},
		{
			MethodName: "Fee",
			Handler:    _Adapter_Fee_Handler,
		},
		{
			MethodName: "GetAllBalances",
			Handler:    _Adapter_GetAllBalances_Handler,
		},
		{
			MethodName: "GetRawTransaction",
			Handler:    _Adapter_GetRawTransaction_Handler,
		},
		{
			MethodName: "GetRawMassTransaction",
			Handler:    _Adapter_GetRawMassTransaction_Handler,
		},
		{
			MethodName: "SendTransaction",
			Handler:    _Adapter_SendTransaction_Handler,
		},
		{
			MethodName: "TransactionByHash",
			Handler:    _Adapter_TransactionByHash_Handler,
		},
		{
			MethodName: "GetAllBalance",
			Handler:    _Adapter_GetAllBalance_Handler,
		},
		{
			MethodName: "GetUnspentInputs",
			Handler:    _Adapter_GetUnspentInputs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ergo_adapter.proto",
}
