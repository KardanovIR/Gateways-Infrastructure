// Code generated by protoc-gen-go. DO NOT EDIT.
// source: waves_adapter.proto

package blockchain

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message for getting last block
type BlockRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockRequest) Reset()         { *m = BlockRequest{} }
func (m *BlockRequest) String() string { return proto.CompactTextString(m) }
func (*BlockRequest) ProtoMessage()    {}
func (*BlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5065a9543fabcab5, []int{0}
}

func (m *BlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockRequest.Unmarshal(m, b)
}
func (m *BlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockRequest.Marshal(b, m, deterministic)
}
func (m *BlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockRequest.Merge(m, src)
}
func (m *BlockRequest) XXX_Size() int {
	return xxx_messageInfo_BlockRequest.Size(m)
}
func (m *BlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BlockRequest proto.InternalMessageInfo

// The response message containing last block number
type BlockReply struct {
	Block                string   `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockReply) Reset()         { *m = BlockReply{} }
func (m *BlockReply) String() string { return proto.CompactTextString(m) }
func (*BlockReply) ProtoMessage()    {}
func (*BlockReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5065a9543fabcab5, []int{1}
}

func (m *BlockReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockReply.Unmarshal(m, b)
}
func (m *BlockReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockReply.Marshal(b, m, deterministic)
}
func (m *BlockReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockReply.Merge(m, src)
}
func (m *BlockReply) XXX_Size() int {
	return xxx_messageInfo_BlockReply.Size(m)
}
func (m *BlockReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockReply.DiscardUnknown(m)
}

var xxx_messageInfo_BlockReply proto.InternalMessageInfo

func (m *BlockReply) GetBlock() string {
	if m != nil {
		return m.Block
	}
	return ""
}

// The request message for getting information by account address
type AddressRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressRequest) Reset()         { *m = AddressRequest{} }
func (m *AddressRequest) String() string { return proto.CompactTextString(m) }
func (*AddressRequest) ProtoMessage()    {}
func (*AddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5065a9543fabcab5, []int{2}
}

func (m *AddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressRequest.Unmarshal(m, b)
}
func (m *AddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressRequest.Marshal(b, m, deterministic)
}
func (m *AddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressRequest.Merge(m, src)
}
func (m *AddressRequest) XXX_Size() int {
	return xxx_messageInfo_AddressRequest.Size(m)
}
func (m *AddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddressRequest proto.InternalMessageInfo

func (m *AddressRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// empty request message
type EmptyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyRequest) Reset()         { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()    {}
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5065a9543fabcab5, []int{3}
}

func (m *EmptyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyRequest.Unmarshal(m, b)
}
func (m *EmptyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyRequest.Marshal(b, m, deterministic)
}
func (m *EmptyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyRequest.Merge(m, src)
}
func (m *EmptyRequest) XXX_Size() int {
	return xxx_messageInfo_EmptyRequest.Size(m)
}
func (m *EmptyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyRequest proto.InternalMessageInfo

// fee request message
type FeeRequest struct {
	SendersPublicKey     string   `protobuf:"bytes,1,opt,name=sendersPublicKey,proto3" json:"sendersPublicKey,omitempty"`
	AssetId              string   `protobuf:"bytes,2,opt,name=assetId,proto3" json:"assetId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeeRequest) Reset()         { *m = FeeRequest{} }
func (m *FeeRequest) String() string { return proto.CompactTextString(m) }
func (*FeeRequest) ProtoMessage()    {}
func (*FeeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5065a9543fabcab5, []int{4}
}

func (m *FeeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeeRequest.Unmarshal(m, b)
}
func (m *FeeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeeRequest.Marshal(b, m, deterministic)
}
func (m *FeeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeeRequest.Merge(m, src)
}
func (m *FeeRequest) XXX_Size() int {
	return xxx_messageInfo_FeeRequest.Size(m)
}
func (m *FeeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FeeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FeeRequest proto.InternalMessageInfo

func (m *FeeRequest) GetSendersPublicKey() string {
	if m != nil {
		return m.SendersPublicKey
	}
	return ""
}

func (m *FeeRequest) GetAssetId() string {
	if m != nil {
		return m.AssetId
	}
	return ""
}

// The response message containing transaction's fee
type FeeReply struct {
	Fee                  string   `protobuf:"bytes,1,opt,name=fee,proto3" json:"fee,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeeReply) Reset()         { *m = FeeReply{} }
func (m *FeeReply) String() string { return proto.CompactTextString(m) }
func (*FeeReply) ProtoMessage()    {}
func (*FeeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5065a9543fabcab5, []int{5}
}

func (m *FeeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeeReply.Unmarshal(m, b)
}
func (m *FeeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeeReply.Marshal(b, m, deterministic)
}
func (m *FeeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeeReply.Merge(m, src)
}
func (m *FeeReply) XXX_Size() int {
	return xxx_messageInfo_FeeReply.Size(m)
}
func (m *FeeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FeeReply.DiscardUnknown(m)
}

var xxx_messageInfo_FeeReply proto.InternalMessageInfo

func (m *FeeReply) GetFee() string {
	if m != nil {
		return m.Fee
	}
	return ""
}

// The response message containing account's balance
type GetBalanceReply struct {
	Balance              string   `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBalanceReply) Reset()         { *m = GetBalanceReply{} }
func (m *GetBalanceReply) String() string { return proto.CompactTextString(m) }
func (*GetBalanceReply) ProtoMessage()    {}
func (*GetBalanceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5065a9543fabcab5, []int{6}
}

func (m *GetBalanceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBalanceReply.Unmarshal(m, b)
}
func (m *GetBalanceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBalanceReply.Marshal(b, m, deterministic)
}
func (m *GetBalanceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBalanceReply.Merge(m, src)
}
func (m *GetBalanceReply) XXX_Size() int {
	return xxx_messageInfo_GetBalanceReply.Size(m)
}
func (m *GetBalanceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBalanceReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetBalanceReply proto.InternalMessageInfo

func (m *GetBalanceReply) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

// The response message containing account's balance with assets balances
type GetAllBalancesReply struct {
	Amount               string                              `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	AssetBalances        []*GetAllBalancesReply_AssetBalance `protobuf:"bytes,2,rep,name=assetBalances,proto3" json:"assetBalances,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *GetAllBalancesReply) Reset()         { *m = GetAllBalancesReply{} }
func (m *GetAllBalancesReply) String() string { return proto.CompactTextString(m) }
func (*GetAllBalancesReply) ProtoMessage()    {}
func (*GetAllBalancesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5065a9543fabcab5, []int{7}
}

func (m *GetAllBalancesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllBalancesReply.Unmarshal(m, b)
}
func (m *GetAllBalancesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllBalancesReply.Marshal(b, m, deterministic)
}
func (m *GetAllBalancesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllBalancesReply.Merge(m, src)
}
func (m *GetAllBalancesReply) XXX_Size() int {
	return xxx_messageInfo_GetAllBalancesReply.Size(m)
}
func (m *GetAllBalancesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllBalancesReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllBalancesReply proto.InternalMessageInfo

func (m *GetAllBalancesReply) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *GetAllBalancesReply) GetAssetBalances() []*GetAllBalancesReply_AssetBalance {
	if m != nil {
		return m.AssetBalances
	}
	return nil
}

type GetAllBalancesReply_AssetBalance struct {
	AssetId              string   `protobuf:"bytes,1,opt,name=assetId,proto3" json:"assetId,omitempty"`
	Amount               string   `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllBalancesReply_AssetBalance) Reset()         { *m = GetAllBalancesReply_AssetBalance{} }
func (m *GetAllBalancesReply_AssetBalance) String() string { return proto.CompactTextString(m) }
func (*GetAllBalancesReply_AssetBalance) ProtoMessage()    {}
func (*GetAllBalancesReply_AssetBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_5065a9543fabcab5, []int{7, 0}
}

func (m *GetAllBalancesReply_AssetBalance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllBalancesReply_AssetBalance.Unmarshal(m, b)
}
func (m *GetAllBalancesReply_AssetBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllBalancesReply_AssetBalance.Marshal(b, m, deterministic)
}
func (m *GetAllBalancesReply_AssetBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllBalancesReply_AssetBalance.Merge(m, src)
}
func (m *GetAllBalancesReply_AssetBalance) XXX_Size() int {
	return xxx_messageInfo_GetAllBalancesReply_AssetBalance.Size(m)
}
func (m *GetAllBalancesReply_AssetBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllBalancesReply_AssetBalance.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllBalancesReply_AssetBalance proto.InternalMessageInfo

func (m *GetAllBalancesReply_AssetBalance) GetAssetId() string {
	if m != nil {
		return m.AssetId
	}
	return ""
}

func (m *GetAllBalancesReply_AssetBalance) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

// The response message containing generated address
type GenerateAddressReply struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenerateAddressReply) Reset()         { *m = GenerateAddressReply{} }
func (m *GenerateAddressReply) String() string { return proto.CompactTextString(m) }
func (*GenerateAddressReply) ProtoMessage()    {}
func (*GenerateAddressReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5065a9543fabcab5, []int{8}
}

func (m *GenerateAddressReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateAddressReply.Unmarshal(m, b)
}
func (m *GenerateAddressReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateAddressReply.Marshal(b, m, deterministic)
}
func (m *GenerateAddressReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateAddressReply.Merge(m, src)
}
func (m *GenerateAddressReply) XXX_Size() int {
	return xxx_messageInfo_GenerateAddressReply.Size(m)
}
func (m *GenerateAddressReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateAddressReply.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateAddressReply proto.InternalMessageInfo

func (m *GenerateAddressReply) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// The response message containing result of address's validation
type ValidateAddressReply struct {
	Valid                bool     `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateAddressReply) Reset()         { *m = ValidateAddressReply{} }
func (m *ValidateAddressReply) String() string { return proto.CompactTextString(m) }
func (*ValidateAddressReply) ProtoMessage()    {}
func (*ValidateAddressReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5065a9543fabcab5, []int{9}
}

func (m *ValidateAddressReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateAddressReply.Unmarshal(m, b)
}
func (m *ValidateAddressReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateAddressReply.Marshal(b, m, deterministic)
}
func (m *ValidateAddressReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateAddressReply.Merge(m, src)
}
func (m *ValidateAddressReply) XXX_Size() int {
	return xxx_messageInfo_ValidateAddressReply.Size(m)
}
func (m *ValidateAddressReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateAddressReply.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateAddressReply proto.InternalMessageInfo

func (m *ValidateAddressReply) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

// The request message for raw transaction creation
type RawTransactionBySendersAddressRequest struct {
	AddressFrom          string   `protobuf:"bytes,1,opt,name=addressFrom,proto3" json:"addressFrom,omitempty"`
	AddressTo            string   `protobuf:"bytes,2,opt,name=addressTo,proto3" json:"addressTo,omitempty"`
	Amount               string   `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RawTransactionBySendersAddressRequest) Reset()         { *m = RawTransactionBySendersAddressRequest{} }
func (m *RawTransactionBySendersAddressRequest) String() string { return proto.CompactTextString(m) }
func (*RawTransactionBySendersAddressRequest) ProtoMessage()    {}
func (*RawTransactionBySendersAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5065a9543fabcab5, []int{10}
}

func (m *RawTransactionBySendersAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawTransactionBySendersAddressRequest.Unmarshal(m, b)
}
func (m *RawTransactionBySendersAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawTransactionBySendersAddressRequest.Marshal(b, m, deterministic)
}
func (m *RawTransactionBySendersAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawTransactionBySendersAddressRequest.Merge(m, src)
}
func (m *RawTransactionBySendersAddressRequest) XXX_Size() int {
	return xxx_messageInfo_RawTransactionBySendersAddressRequest.Size(m)
}
func (m *RawTransactionBySendersAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RawTransactionBySendersAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RawTransactionBySendersAddressRequest proto.InternalMessageInfo

func (m *RawTransactionBySendersAddressRequest) GetAddressFrom() string {
	if m != nil {
		return m.AddressFrom
	}
	return ""
}

func (m *RawTransactionBySendersAddressRequest) GetAddressTo() string {
	if m != nil {
		return m.AddressTo
	}
	return ""
}

func (m *RawTransactionBySendersAddressRequest) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

// The request message for raw transaction creation
type RawTransactionRequest struct {
	AddressFrom          string   `protobuf:"bytes,1,opt,name=addressFrom,proto3" json:"addressFrom,omitempty"`
	SendersPublicKey     string   `protobuf:"bytes,2,opt,name=sendersPublicKey,proto3" json:"sendersPublicKey,omitempty"`
	AddressTo            string   `protobuf:"bytes,3,opt,name=addressTo,proto3" json:"addressTo,omitempty"`
	Amount               string   `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	AssetId              string   `protobuf:"bytes,5,opt,name=assetId,proto3" json:"assetId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RawTransactionRequest) Reset()         { *m = RawTransactionRequest{} }
func (m *RawTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*RawTransactionRequest) ProtoMessage()    {}
func (*RawTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5065a9543fabcab5, []int{11}
}

func (m *RawTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawTransactionRequest.Unmarshal(m, b)
}
func (m *RawTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawTransactionRequest.Marshal(b, m, deterministic)
}
func (m *RawTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawTransactionRequest.Merge(m, src)
}
func (m *RawTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_RawTransactionRequest.Size(m)
}
func (m *RawTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RawTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RawTransactionRequest proto.InternalMessageInfo

func (m *RawTransactionRequest) GetAddressFrom() string {
	if m != nil {
		return m.AddressFrom
	}
	return ""
}

func (m *RawTransactionRequest) GetSendersPublicKey() string {
	if m != nil {
		return m.SendersPublicKey
	}
	return ""
}

func (m *RawTransactionRequest) GetAddressTo() string {
	if m != nil {
		return m.AddressTo
	}
	return ""
}

func (m *RawTransactionRequest) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *RawTransactionRequest) GetAssetId() string {
	if m != nil {
		return m.AssetId
	}
	return ""
}

// The response message containing raw transaction
type RawTransactionReply struct {
	Tx                   []byte   `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RawTransactionReply) Reset()         { *m = RawTransactionReply{} }
func (m *RawTransactionReply) String() string { return proto.CompactTextString(m) }
func (*RawTransactionReply) ProtoMessage()    {}
func (*RawTransactionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5065a9543fabcab5, []int{12}
}

func (m *RawTransactionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawTransactionReply.Unmarshal(m, b)
}
func (m *RawTransactionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawTransactionReply.Marshal(b, m, deterministic)
}
func (m *RawTransactionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawTransactionReply.Merge(m, src)
}
func (m *RawTransactionReply) XXX_Size() int {
	return xxx_messageInfo_RawTransactionReply.Size(m)
}
func (m *RawTransactionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RawTransactionReply.DiscardUnknown(m)
}

var xxx_messageInfo_RawTransactionReply proto.InternalMessageInfo

func (m *RawTransactionReply) GetTx() []byte {
	if m != nil {
		return m.Tx
	}
	return nil
}

// The request message for singing transaction
type SignTransactionRequest struct {
	SenderAddress        string   `protobuf:"bytes,1,opt,name=senderAddress,proto3" json:"senderAddress,omitempty"`
	Tx                   []byte   `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignTransactionRequest) Reset()         { *m = SignTransactionRequest{} }
func (m *SignTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SignTransactionRequest) ProtoMessage()    {}
func (*SignTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5065a9543fabcab5, []int{13}
}

func (m *SignTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignTransactionRequest.Unmarshal(m, b)
}
func (m *SignTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignTransactionRequest.Marshal(b, m, deterministic)
}
func (m *SignTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignTransactionRequest.Merge(m, src)
}
func (m *SignTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SignTransactionRequest.Size(m)
}
func (m *SignTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignTransactionRequest proto.InternalMessageInfo

func (m *SignTransactionRequest) GetSenderAddress() string {
	if m != nil {
		return m.SenderAddress
	}
	return ""
}

func (m *SignTransactionRequest) GetTx() []byte {
	if m != nil {
		return m.Tx
	}
	return nil
}

// The request message for singing transaction by private key in parameters
type SignTransactionBySecretKeyRequest struct {
	SenderSecretKey      string   `protobuf:"bytes,1,opt,name=senderSecretKey,proto3" json:"senderSecretKey,omitempty"`
	Tx                   []byte   `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignTransactionBySecretKeyRequest) Reset()         { *m = SignTransactionBySecretKeyRequest{} }
func (m *SignTransactionBySecretKeyRequest) String() string { return proto.CompactTextString(m) }
func (*SignTransactionBySecretKeyRequest) ProtoMessage()    {}
func (*SignTransactionBySecretKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5065a9543fabcab5, []int{14}
}

func (m *SignTransactionBySecretKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignTransactionBySecretKeyRequest.Unmarshal(m, b)
}
func (m *SignTransactionBySecretKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignTransactionBySecretKeyRequest.Marshal(b, m, deterministic)
}
func (m *SignTransactionBySecretKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignTransactionBySecretKeyRequest.Merge(m, src)
}
func (m *SignTransactionBySecretKeyRequest) XXX_Size() int {
	return xxx_messageInfo_SignTransactionBySecretKeyRequest.Size(m)
}
func (m *SignTransactionBySecretKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignTransactionBySecretKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignTransactionBySecretKeyRequest proto.InternalMessageInfo

func (m *SignTransactionBySecretKeyRequest) GetSenderSecretKey() string {
	if m != nil {
		return m.SenderSecretKey
	}
	return ""
}

func (m *SignTransactionBySecretKeyRequest) GetTx() []byte {
	if m != nil {
		return m.Tx
	}
	return nil
}

// The response message containing signed transaction
type SignTransactionReply struct {
	Tx                   []byte   `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	TxHash               string   `protobuf:"bytes,2,opt,name=txHash,proto3" json:"txHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignTransactionReply) Reset()         { *m = SignTransactionReply{} }
func (m *SignTransactionReply) String() string { return proto.CompactTextString(m) }
func (*SignTransactionReply) ProtoMessage()    {}
func (*SignTransactionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5065a9543fabcab5, []int{15}
}

func (m *SignTransactionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignTransactionReply.Unmarshal(m, b)
}
func (m *SignTransactionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignTransactionReply.Marshal(b, m, deterministic)
}
func (m *SignTransactionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignTransactionReply.Merge(m, src)
}
func (m *SignTransactionReply) XXX_Size() int {
	return xxx_messageInfo_SignTransactionReply.Size(m)
}
func (m *SignTransactionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SignTransactionReply.DiscardUnknown(m)
}

var xxx_messageInfo_SignTransactionReply proto.InternalMessageInfo

func (m *SignTransactionReply) GetTx() []byte {
	if m != nil {
		return m.Tx
	}
	return nil
}

func (m *SignTransactionReply) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

// The request message for singing transaction
type SendTransactionRequest struct {
	Tx                   []byte   `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendTransactionRequest) Reset()         { *m = SendTransactionRequest{} }
func (m *SendTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SendTransactionRequest) ProtoMessage()    {}
func (*SendTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5065a9543fabcab5, []int{16}
}

func (m *SendTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionRequest.Unmarshal(m, b)
}
func (m *SendTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionRequest.Marshal(b, m, deterministic)
}
func (m *SendTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionRequest.Merge(m, src)
}
func (m *SendTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SendTransactionRequest.Size(m)
}
func (m *SendTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionRequest proto.InternalMessageInfo

func (m *SendTransactionRequest) GetTx() []byte {
	if m != nil {
		return m.Tx
	}
	return nil
}

// The response message containing transaction's id
type SendTransactionReply struct {
	TxId                 string   `protobuf:"bytes,1,opt,name=txId,proto3" json:"txId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendTransactionReply) Reset()         { *m = SendTransactionReply{} }
func (m *SendTransactionReply) String() string { return proto.CompactTextString(m) }
func (*SendTransactionReply) ProtoMessage()    {}
func (*SendTransactionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5065a9543fabcab5, []int{17}
}

func (m *SendTransactionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionReply.Unmarshal(m, b)
}
func (m *SendTransactionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionReply.Marshal(b, m, deterministic)
}
func (m *SendTransactionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionReply.Merge(m, src)
}
func (m *SendTransactionReply) XXX_Size() int {
	return xxx_messageInfo_SendTransactionReply.Size(m)
}
func (m *SendTransactionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionReply.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionReply proto.InternalMessageInfo

func (m *SendTransactionReply) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

// The request message for getting transaction's status containing tx id
type GetTransactionStatusRequest struct {
	TxId                 string   `protobuf:"bytes,1,opt,name=txId,proto3" json:"txId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionStatusRequest) Reset()         { *m = GetTransactionStatusRequest{} }
func (m *GetTransactionStatusRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionStatusRequest) ProtoMessage()    {}
func (*GetTransactionStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5065a9543fabcab5, []int{18}
}

func (m *GetTransactionStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionStatusRequest.Unmarshal(m, b)
}
func (m *GetTransactionStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionStatusRequest.Marshal(b, m, deterministic)
}
func (m *GetTransactionStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionStatusRequest.Merge(m, src)
}
func (m *GetTransactionStatusRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransactionStatusRequest.Size(m)
}
func (m *GetTransactionStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionStatusRequest proto.InternalMessageInfo

func (m *GetTransactionStatusRequest) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

// The response message containing transaction's status: UNKNOWN, PENDING, SUCCESS
type GetTransactionStatusReply struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionStatusReply) Reset()         { *m = GetTransactionStatusReply{} }
func (m *GetTransactionStatusReply) String() string { return proto.CompactTextString(m) }
func (*GetTransactionStatusReply) ProtoMessage()    {}
func (*GetTransactionStatusReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5065a9543fabcab5, []int{19}
}

func (m *GetTransactionStatusReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionStatusReply.Unmarshal(m, b)
}
func (m *GetTransactionStatusReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionStatusReply.Marshal(b, m, deterministic)
}
func (m *GetTransactionStatusReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionStatusReply.Merge(m, src)
}
func (m *GetTransactionStatusReply) XXX_Size() int {
	return xxx_messageInfo_GetTransactionStatusReply.Size(m)
}
func (m *GetTransactionStatusReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionStatusReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionStatusReply proto.InternalMessageInfo

func (m *GetTransactionStatusReply) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// The request message for getting transaction by hash
type TransactionByHashRequest struct {
	TxHash               string   `protobuf:"bytes,1,opt,name=txHash,proto3" json:"txHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionByHashRequest) Reset()         { *m = TransactionByHashRequest{} }
func (m *TransactionByHashRequest) String() string { return proto.CompactTextString(m) }
func (*TransactionByHashRequest) ProtoMessage()    {}
func (*TransactionByHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5065a9543fabcab5, []int{20}
}

func (m *TransactionByHashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionByHashRequest.Unmarshal(m, b)
}
func (m *TransactionByHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionByHashRequest.Marshal(b, m, deterministic)
}
func (m *TransactionByHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionByHashRequest.Merge(m, src)
}
func (m *TransactionByHashRequest) XXX_Size() int {
	return xxx_messageInfo_TransactionByHashRequest.Size(m)
}
func (m *TransactionByHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionByHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionByHashRequest proto.InternalMessageInfo

func (m *TransactionByHashRequest) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

// The response message for getting transaction by hash
type TransactionByHashReply struct {
	SenderAddress        string         `protobuf:"bytes,1,opt,name=senderAddress,proto3" json:"senderAddress,omitempty"`
	SendersPublicKey     string         `protobuf:"bytes,2,opt,name=sendersPublicKey,proto3" json:"sendersPublicKey,omitempty"`
	RecipientAddress     string         `protobuf:"bytes,3,opt,name=recipientAddress,proto3" json:"recipientAddress,omitempty"`
	Amount               string         `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	AssetId              string         `protobuf:"bytes,5,opt,name=assetId,proto3" json:"assetId,omitempty"`
	TxHash               string         `protobuf:"bytes,6,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Fee                  string         `protobuf:"bytes,7,opt,name=fee,proto3" json:"fee,omitempty"`
	Data                 []byte         `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
	Status               string         `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	Inputs               []*InputOutput `protobuf:"bytes,10,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs              []*InputOutput `protobuf:"bytes,11,rep,name=outputs,proto3" json:"outputs,omitempty"`
	AssetAmount          string         `protobuf:"bytes,12,opt,name=assetAmount,proto3" json:"assetAmount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TransactionByHashReply) Reset()         { *m = TransactionByHashReply{} }
func (m *TransactionByHashReply) String() string { return proto.CompactTextString(m) }
func (*TransactionByHashReply) ProtoMessage()    {}
func (*TransactionByHashReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5065a9543fabcab5, []int{21}
}

func (m *TransactionByHashReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionByHashReply.Unmarshal(m, b)
}
func (m *TransactionByHashReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionByHashReply.Marshal(b, m, deterministic)
}
func (m *TransactionByHashReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionByHashReply.Merge(m, src)
}
func (m *TransactionByHashReply) XXX_Size() int {
	return xxx_messageInfo_TransactionByHashReply.Size(m)
}
func (m *TransactionByHashReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionByHashReply.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionByHashReply proto.InternalMessageInfo

func (m *TransactionByHashReply) GetSenderAddress() string {
	if m != nil {
		return m.SenderAddress
	}
	return ""
}

func (m *TransactionByHashReply) GetSendersPublicKey() string {
	if m != nil {
		return m.SendersPublicKey
	}
	return ""
}

func (m *TransactionByHashReply) GetRecipientAddress() string {
	if m != nil {
		return m.RecipientAddress
	}
	return ""
}

func (m *TransactionByHashReply) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *TransactionByHashReply) GetAssetId() string {
	if m != nil {
		return m.AssetId
	}
	return ""
}

func (m *TransactionByHashReply) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *TransactionByHashReply) GetFee() string {
	if m != nil {
		return m.Fee
	}
	return ""
}

func (m *TransactionByHashReply) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TransactionByHashReply) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TransactionByHashReply) GetInputs() []*InputOutput {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *TransactionByHashReply) GetOutputs() []*InputOutput {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *TransactionByHashReply) GetAssetAmount() string {
	if m != nil {
		return m.AssetAmount
	}
	return ""
}

type InputOutput struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Amount               string   `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InputOutput) Reset()         { *m = InputOutput{} }
func (m *InputOutput) String() string { return proto.CompactTextString(m) }
func (*InputOutput) ProtoMessage()    {}
func (*InputOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_5065a9543fabcab5, []int{22}
}

func (m *InputOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InputOutput.Unmarshal(m, b)
}
func (m *InputOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InputOutput.Marshal(b, m, deterministic)
}
func (m *InputOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InputOutput.Merge(m, src)
}
func (m *InputOutput) XXX_Size() int {
	return xxx_messageInfo_InputOutput.Size(m)
}
func (m *InputOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_InputOutput.DiscardUnknown(m)
}

var xxx_messageInfo_InputOutput proto.InternalMessageInfo

func (m *InputOutput) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *InputOutput) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func init() {
	proto.RegisterType((*BlockRequest)(nil), "blockchain.BlockRequest")
	proto.RegisterType((*BlockReply)(nil), "blockchain.BlockReply")
	proto.RegisterType((*AddressRequest)(nil), "blockchain.AddressRequest")
	proto.RegisterType((*EmptyRequest)(nil), "blockchain.EmptyRequest")
	proto.RegisterType((*FeeRequest)(nil), "blockchain.FeeRequest")
	proto.RegisterType((*FeeReply)(nil), "blockchain.FeeReply")
	proto.RegisterType((*GetBalanceReply)(nil), "blockchain.GetBalanceReply")
	proto.RegisterType((*GetAllBalancesReply)(nil), "blockchain.GetAllBalancesReply")
	proto.RegisterType((*GetAllBalancesReply_AssetBalance)(nil), "blockchain.GetAllBalancesReply.AssetBalance")
	proto.RegisterType((*GenerateAddressReply)(nil), "blockchain.GenerateAddressReply")
	proto.RegisterType((*ValidateAddressReply)(nil), "blockchain.ValidateAddressReply")
	proto.RegisterType((*RawTransactionBySendersAddressRequest)(nil), "blockchain.RawTransactionBySendersAddressRequest")
	proto.RegisterType((*RawTransactionRequest)(nil), "blockchain.RawTransactionRequest")
	proto.RegisterType((*RawTransactionReply)(nil), "blockchain.RawTransactionReply")
	proto.RegisterType((*SignTransactionRequest)(nil), "blockchain.SignTransactionRequest")
	proto.RegisterType((*SignTransactionBySecretKeyRequest)(nil), "blockchain.SignTransactionBySecretKeyRequest")
	proto.RegisterType((*SignTransactionReply)(nil), "blockchain.SignTransactionReply")
	proto.RegisterType((*SendTransactionRequest)(nil), "blockchain.SendTransactionRequest")
	proto.RegisterType((*SendTransactionReply)(nil), "blockchain.SendTransactionReply")
	proto.RegisterType((*GetTransactionStatusRequest)(nil), "blockchain.GetTransactionStatusRequest")
	proto.RegisterType((*GetTransactionStatusReply)(nil), "blockchain.GetTransactionStatusReply")
	proto.RegisterType((*TransactionByHashRequest)(nil), "blockchain.TransactionByHashRequest")
	proto.RegisterType((*TransactionByHashReply)(nil), "blockchain.TransactionByHashReply")
	proto.RegisterType((*InputOutput)(nil), "blockchain.InputOutput")
}

func init() { proto.RegisterFile("waves_adapter.proto", fileDescriptor_5065a9543fabcab5) }

var fileDescriptor_5065a9543fabcab5 = []byte{
	// 943 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x57, 0xdb, 0x6e, 0xdb, 0x46,
	0x10, 0xd5, 0x25, 0xb6, 0xec, 0xb1, 0x63, 0xd9, 0x6b, 0x45, 0x65, 0x99, 0x00, 0x95, 0x17, 0x31,
	0x2a, 0xa8, 0xae, 0x5a, 0x3b, 0xe8, 0x6b, 0x5b, 0x09, 0xa8, 0xe5, 0x20, 0x45, 0xe3, 0xd2, 0x41,
	0x8b, 0x3e, 0x14, 0xc1, 0x8a, 0xda, 0x5a, 0x44, 0x69, 0x92, 0x25, 0x57, 0xb1, 0xf4, 0xd4, 0x5f,
	0xe8, 0x47, 0xf4, 0x17, 0xfa, 0x05, 0xfd, 0xb1, 0x60, 0x2f, 0x94, 0x76, 0x79, 0x91, 0xe5, 0x27,
	0x73, 0x86, 0x33, 0x67, 0xe6, 0xec, 0x8e, 0xe6, 0x98, 0x70, 0x7c, 0x4f, 0x3e, 0xd0, 0xe4, 0x3d,
	0x99, 0x90, 0x88, 0xd1, 0xb8, 0x1f, 0xc5, 0x21, 0x0b, 0x11, 0x8c, 0xfd, 0xd0, 0xfd, 0xd3, 0x9d,
	0x12, 0x2f, 0xc0, 0x07, 0xb0, 0x3f, 0xe4, 0x96, 0x43, 0xff, 0x9a, 0xd1, 0x84, 0x61, 0x0c, 0xa0,
	0xec, 0xc8, 0x5f, 0xa0, 0x16, 0x6c, 0x89, 0x58, 0xab, 0xda, 0xa9, 0x76, 0x77, 0x1d, 0x69, 0xe0,
	0x1e, 0x1c, 0x0c, 0x26, 0x93, 0x98, 0x26, 0x89, 0xca, 0x42, 0x16, 0x34, 0x88, 0xf4, 0xa8, 0xc8,
	0xd4, 0xe4, 0xf8, 0x3f, 0xdc, 0x45, 0x6c, 0x91, 0xe2, 0x3b, 0x00, 0x97, 0x94, 0xa6, 0x79, 0x3d,
	0x38, 0x4c, 0x68, 0x30, 0xa1, 0x71, 0x72, 0x3d, 0x1b, 0xfb, 0x9e, 0xfb, 0x86, 0x2e, 0x14, 0x40,
	0xce, 0x2f, 0x6a, 0x24, 0x09, 0x65, 0xaf, 0x27, 0x56, 0x4d, 0xd5, 0x90, 0x26, 0x7e, 0x01, 0x3b,
	0x02, 0x93, 0x77, 0x7c, 0x08, 0xf5, 0x3f, 0x28, 0x55, 0x20, 0xfc, 0x11, 0x7f, 0x01, 0xcd, 0x11,
	0x65, 0x43, 0xe2, 0x93, 0xc0, 0x55, 0x41, 0x16, 0x34, 0xc6, 0xd2, 0x4e, 0xdb, 0x55, 0x26, 0xfe,
	0xbf, 0x0a, 0xc7, 0x23, 0xca, 0x06, 0xbe, 0xaf, 0x12, 0x12, 0x99, 0xd1, 0x86, 0x6d, 0x72, 0x17,
	0xce, 0x02, 0xa6, 0x12, 0x94, 0x85, 0x1c, 0x78, 0x2a, 0xba, 0x48, 0xa3, 0xad, 0x5a, 0xa7, 0xde,
	0xdd, 0xbb, 0x38, 0xeb, 0xaf, 0x8e, 0xb8, 0x5f, 0x80, 0xd7, 0x1f, 0x68, 0x49, 0x8e, 0x09, 0x61,
	0x7f, 0x0f, 0xfb, 0xfa, 0x6b, 0x9d, 0x78, 0xd5, 0x20, 0xae, 0x75, 0x55, 0xd3, 0xbb, 0xc2, 0x5f,
	0x43, 0x6b, 0x44, 0x03, 0x1a, 0x13, 0x46, 0x97, 0x17, 0xa5, 0x78, 0x97, 0x5c, 0xd3, 0x19, 0xb4,
	0x7e, 0x21, 0xbe, 0x37, 0xc9, 0x66, 0xb4, 0x60, 0xeb, 0x03, 0xf7, 0x8b, 0xf8, 0x1d, 0x47, 0x1a,
	0xf8, 0x6f, 0x38, 0x75, 0xc8, 0xfd, 0xbb, 0x98, 0x04, 0x09, 0x71, 0x99, 0x17, 0x06, 0xc3, 0xc5,
	0x8d, 0xbc, 0xae, 0xcc, 0x5c, 0x74, 0x60, 0x4f, 0x55, 0xb8, 0x8c, 0xc3, 0x3b, 0x55, 0x54, 0x77,
	0xa1, 0x17, 0xb0, 0xab, 0xcc, 0x77, 0xa1, 0x62, 0xb1, 0x72, 0x68, 0x04, 0xeb, 0x06, 0xc1, 0xff,
	0xaa, 0xf0, 0xcc, 0xec, 0x60, 0xf3, 0x8a, 0x45, 0x33, 0x57, 0x2b, 0x99, 0x39, 0xa3, 0xbb, 0x7a,
	0x79, 0x77, 0x4f, 0x8c, 0xa1, 0xd0, 0x2e, 0x6c, 0xcb, 0x9c, 0xd4, 0x53, 0x38, 0xce, 0xb6, 0xcd,
	0x4f, 0xf9, 0x00, 0x6a, 0x6c, 0x2e, 0x7a, 0xdd, 0x77, 0x6a, 0x6c, 0x8e, 0x7f, 0x82, 0xf6, 0x8d,
	0x77, 0x1b, 0x14, 0xd0, 0x7b, 0x09, 0x4f, 0x65, 0x93, 0x03, 0xe3, 0x1e, 0x4d, 0xa7, 0xc2, 0xab,
	0x2d, 0xf1, 0x7e, 0x87, 0x93, 0x0c, 0x1e, 0xbf, 0x30, 0x37, 0xa6, 0xec, 0x0d, 0x4d, 0x7f, 0x99,
	0xa8, 0x0b, 0x4d, 0x89, 0xb2, 0x7c, 0xa3, 0xc0, 0xb3, 0xee, 0x1c, 0xfc, 0xb7, 0xd0, 0xca, 0xb5,
	0x5b, 0x40, 0x8b, 0x9f, 0x17, 0x9b, 0x5f, 0x91, 0x64, 0x9a, 0x8e, 0xab, 0xb4, 0x70, 0x17, 0xda,
	0x7c, 0x7c, 0x0a, 0xe8, 0x66, 0x0f, 0xa6, 0x07, 0xad, 0x5c, 0x24, 0xaf, 0x84, 0xe0, 0x09, 0x9b,
	0x2f, 0x7f, 0x1f, 0xe2, 0x19, 0x9f, 0xc3, 0xf3, 0x11, 0x65, 0x5a, 0xe8, 0x0d, 0x23, 0x6c, 0xb6,
	0x1c, 0xcd, 0xa2, 0x94, 0x57, 0xf0, 0x69, 0x71, 0x8a, 0x5a, 0x01, 0x89, 0x30, 0xd3, 0x15, 0x20,
	0x2d, 0x7c, 0x01, 0x96, 0x71, 0xb0, 0x9c, 0x52, 0x5a, 0x64, 0xc5, 0xb8, 0x6a, 0x30, 0xfe, 0xb7,
	0x0e, 0xed, 0x82, 0x24, 0x5e, 0x66, 0xb3, 0x1b, 0x7e, 0xcc, 0x10, 0xf7, 0xe0, 0x30, 0xa6, 0xae,
	0x17, 0x79, 0x34, 0x60, 0x29, 0xa8, 0x9c, 0xe5, 0x9c, 0xff, 0xf1, 0x23, 0xad, 0x51, 0xdc, 0xd6,
	0x29, 0xa6, 0x8b, 0xb8, 0xb1, 0x5c, 0xc4, 0xfc, 0xc4, 0x27, 0x84, 0x11, 0x6b, 0x47, 0x5c, 0xa7,
	0x78, 0xd6, 0x0e, 0x75, 0x57, 0x3f, 0x54, 0xf4, 0x15, 0x6c, 0x7b, 0x41, 0x34, 0x63, 0x89, 0x05,
	0x62, 0xa1, 0x7e, 0xa2, 0x2f, 0xd4, 0xd7, 0xfc, 0xcd, 0xdb, 0x19, 0x8b, 0x66, 0xcc, 0x51, 0x61,
	0xe8, 0x1c, 0x1a, 0xa1, 0xf0, 0x24, 0xd6, 0xde, 0xfa, 0x8c, 0x34, 0x4e, 0xac, 0x0a, 0x4e, 0x62,
	0x20, 0x09, 0xef, 0xab, 0x55, 0xb1, 0x72, 0xe1, 0xef, 0x60, 0x4f, 0xcb, 0x2c, 0x5f, 0x9f, 0x65,
	0x8b, 0xf8, 0xe2, 0x9f, 0x5d, 0x68, 0x0c, 0xa4, 0xf6, 0xa2, 0x2b, 0x40, 0x23, 0xca, 0x7e, 0x24,
	0x09, 0x13, 0x02, 0x7b, 0x45, 0xbd, 0xdb, 0x29, 0x43, 0x96, 0xde, 0xa6, 0xae, 0xc4, 0x76, 0xbb,
	0xe0, 0x4d, 0xe4, 0x2f, 0x70, 0x05, 0xbd, 0xe5, 0x8a, 0x66, 0xac, 0x77, 0x13, 0x46, 0x17, 0x5c,
	0xbb, 0x63, 0x4a, 0x51, 0x5e, 0x15, 0x70, 0x05, 0xfd, 0x0c, 0xcd, 0xcc, 0xf6, 0x47, 0xb6, 0x9e,
	0x66, 0x6e, 0x75, 0x13, 0xb2, 0x48, 0x36, 0x70, 0x05, 0x7d, 0x03, 0xf5, 0x4b, 0x4a, 0x91, 0x41,
	0x62, 0x25, 0xfc, 0x76, 0x2b, 0xe7, 0x97, 0x69, 0x23, 0x80, 0x95, 0x58, 0xaf, 0x6d, 0xe2, 0x79,
	0x46, 0x62, 0x75, 0x81, 0x17, 0x67, 0x74, 0x60, 0xea, 0xee, 0x5a, 0xb0, 0xcf, 0x1e, 0xd0, 0x6b,
	0x5c, 0x41, 0x0b, 0x38, 0x19, 0x51, 0xb6, 0x5e, 0xf6, 0xd0, 0xb9, 0x8e, 0xb3, 0x91, 0x44, 0x9a,
	0xa5, 0x0b, 0xc4, 0x01, 0x57, 0xd0, 0x6f, 0x70, 0x94, 0x2b, 0x8d, 0x4e, 0xd6, 0xe5, 0x3d, 0x02,
	0xba, 0x99, 0x59, 0xdd, 0x08, 0xeb, 0x59, 0xc5, 0x32, 0x64, 0x4e, 0x40, 0xd1, 0xee, 0xc7, 0x15,
	0x14, 0x82, 0x5d, 0x2e, 0x3a, 0xe8, 0xcb, 0x35, 0x08, 0x79, 0x71, 0xda, 0xa8, 0x20, 0xe7, 0x62,
	0x8a, 0x43, 0x86, 0x4b, 0xa1, 0xc6, 0x64, 0xa0, 0x0b, 0xd4, 0x05, 0x57, 0xd0, 0x94, 0xff, 0x43,
	0x95, 0x17, 0x06, 0xf4, 0x79, 0x66, 0x6e, 0xca, 0xd4, 0xc6, 0x3e, 0x7d, 0x38, 0x50, 0x56, 0x7a,
	0x0f, 0x47, 0x39, 0x61, 0x40, 0x2f, 0xf5, 0xec, 0x32, 0xb1, 0xb1, 0xf1, 0x03, 0x51, 0xa2, 0xc0,
	0xf0, 0x0c, 0x9e, 0x79, 0x61, 0xff, 0x36, 0x8e, 0xdc, 0x7e, 0xfa, 0x55, 0x20, 0xbe, 0x11, 0x86,
	0x47, 0xbf, 0xf2, 0x3f, 0x6a, 0x5b, 0x5d, 0xf3, 0x0f, 0x85, 0xeb, 0xea, 0x78, 0x5b, 0x7c, 0x31,
	0xbc, 0xfa, 0x18, 0x00, 0x00, 0xff, 0xff, 0x8d, 0x1c, 0xd2, 0x7a, 0x48, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AdapterClient is the client API for Adapter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdapterClient interface {
	// getting last block
	GetLastBlockHeight(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*BlockReply, error)
	// Generate address
	GenerateAddress(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GenerateAddressReply, error)
	// Validate address
	ValidateAddress(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*ValidateAddressReply, error)
	// Get transaction's fee
	Fee(ctx context.Context, in *FeeRequest, opts ...grpc.CallOption) (*FeeReply, error)
	// Get account's balance
	GetBalance(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*GetBalanceReply, error)
	// Get account's balance with assets balances
	GetAllBalances(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*GetAllBalancesReply, error)
	// request to create raw transaction by senders's address
	GetRawTransactionBySendersAddress(ctx context.Context, in *RawTransactionBySendersAddressRequest, opts ...grpc.CallOption) (*RawTransactionReply, error)
	// request to create raw transaction by senders's public key
	GetRawTransaction(ctx context.Context, in *RawTransactionRequest, opts ...grpc.CallOption) (*RawTransactionReply, error)
	// Sing transaction with private key keeped in adapter
	SignTransaction(ctx context.Context, in *SignTransactionRequest, opts ...grpc.CallOption) (*SignTransactionReply, error)
	// Sing transaction by private key in parameters
	SignTransactionBySecretKey(ctx context.Context, in *SignTransactionBySecretKeyRequest, opts ...grpc.CallOption) (*SignTransactionReply, error)
	// Send transaction
	SendTransaction(ctx context.Context, in *SendTransactionRequest, opts ...grpc.CallOption) (*SendTransactionReply, error)
	// Get transaction status
	GetTransactionStatus(ctx context.Context, in *GetTransactionStatusRequest, opts ...grpc.CallOption) (*GetTransactionStatusReply, error)
	// Get transaction
	TransactionByHash(ctx context.Context, in *TransactionByHashRequest, opts ...grpc.CallOption) (*TransactionByHashReply, error)
}

type adapterClient struct {
	cc *grpc.ClientConn
}

func NewAdapterClient(cc *grpc.ClientConn) AdapterClient {
	return &adapterClient{cc}
}

func (c *adapterClient) GetLastBlockHeight(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*BlockReply, error) {
	out := new(BlockReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/GetLastBlockHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) GenerateAddress(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GenerateAddressReply, error) {
	out := new(GenerateAddressReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/GenerateAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) ValidateAddress(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*ValidateAddressReply, error) {
	out := new(ValidateAddressReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/ValidateAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) Fee(ctx context.Context, in *FeeRequest, opts ...grpc.CallOption) (*FeeReply, error) {
	out := new(FeeReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/Fee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) GetBalance(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*GetBalanceReply, error) {
	out := new(GetBalanceReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) GetAllBalances(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*GetAllBalancesReply, error) {
	out := new(GetAllBalancesReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/GetAllBalances", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) GetRawTransactionBySendersAddress(ctx context.Context, in *RawTransactionBySendersAddressRequest, opts ...grpc.CallOption) (*RawTransactionReply, error) {
	out := new(RawTransactionReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/GetRawTransactionBySendersAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) GetRawTransaction(ctx context.Context, in *RawTransactionRequest, opts ...grpc.CallOption) (*RawTransactionReply, error) {
	out := new(RawTransactionReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/GetRawTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) SignTransaction(ctx context.Context, in *SignTransactionRequest, opts ...grpc.CallOption) (*SignTransactionReply, error) {
	out := new(SignTransactionReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/SignTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) SignTransactionBySecretKey(ctx context.Context, in *SignTransactionBySecretKeyRequest, opts ...grpc.CallOption) (*SignTransactionReply, error) {
	out := new(SignTransactionReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/SignTransactionBySecretKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) SendTransaction(ctx context.Context, in *SendTransactionRequest, opts ...grpc.CallOption) (*SendTransactionReply, error) {
	out := new(SendTransactionReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/SendTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) GetTransactionStatus(ctx context.Context, in *GetTransactionStatusRequest, opts ...grpc.CallOption) (*GetTransactionStatusReply, error) {
	out := new(GetTransactionStatusReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/GetTransactionStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) TransactionByHash(ctx context.Context, in *TransactionByHashRequest, opts ...grpc.CallOption) (*TransactionByHashReply, error) {
	out := new(TransactionByHashReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/TransactionByHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdapterServer is the server API for Adapter service.
type AdapterServer interface {
	// getting last block
	GetLastBlockHeight(context.Context, *BlockRequest) (*BlockReply, error)
	// Generate address
	GenerateAddress(context.Context, *EmptyRequest) (*GenerateAddressReply, error)
	// Validate address
	ValidateAddress(context.Context, *AddressRequest) (*ValidateAddressReply, error)
	// Get transaction's fee
	Fee(context.Context, *FeeRequest) (*FeeReply, error)
	// Get account's balance
	GetBalance(context.Context, *AddressRequest) (*GetBalanceReply, error)
	// Get account's balance with assets balances
	GetAllBalances(context.Context, *AddressRequest) (*GetAllBalancesReply, error)
	// request to create raw transaction by senders's address
	GetRawTransactionBySendersAddress(context.Context, *RawTransactionBySendersAddressRequest) (*RawTransactionReply, error)
	// request to create raw transaction by senders's public key
	GetRawTransaction(context.Context, *RawTransactionRequest) (*RawTransactionReply, error)
	// Sing transaction with private key keeped in adapter
	SignTransaction(context.Context, *SignTransactionRequest) (*SignTransactionReply, error)
	// Sing transaction by private key in parameters
	SignTransactionBySecretKey(context.Context, *SignTransactionBySecretKeyRequest) (*SignTransactionReply, error)
	// Send transaction
	SendTransaction(context.Context, *SendTransactionRequest) (*SendTransactionReply, error)
	// Get transaction status
	GetTransactionStatus(context.Context, *GetTransactionStatusRequest) (*GetTransactionStatusReply, error)
	// Get transaction
	TransactionByHash(context.Context, *TransactionByHashRequest) (*TransactionByHashReply, error)
}

// UnimplementedAdapterServer can be embedded to have forward compatible implementations.
type UnimplementedAdapterServer struct {
}

func (*UnimplementedAdapterServer) GetLastBlockHeight(ctx context.Context, req *BlockRequest) (*BlockReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLastBlockHeight not implemented")
}
func (*UnimplementedAdapterServer) GenerateAddress(ctx context.Context, req *EmptyRequest) (*GenerateAddressReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateAddress not implemented")
}
func (*UnimplementedAdapterServer) ValidateAddress(ctx context.Context, req *AddressRequest) (*ValidateAddressReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateAddress not implemented")
}
func (*UnimplementedAdapterServer) Fee(ctx context.Context, req *FeeRequest) (*FeeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Fee not implemented")
}
func (*UnimplementedAdapterServer) GetBalance(ctx context.Context, req *AddressRequest) (*GetBalanceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalance not implemented")
}
func (*UnimplementedAdapterServer) GetAllBalances(ctx context.Context, req *AddressRequest) (*GetAllBalancesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllBalances not implemented")
}
func (*UnimplementedAdapterServer) GetRawTransactionBySendersAddress(ctx context.Context, req *RawTransactionBySendersAddressRequest) (*RawTransactionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRawTransactionBySendersAddress not implemented")
}
func (*UnimplementedAdapterServer) GetRawTransaction(ctx context.Context, req *RawTransactionRequest) (*RawTransactionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRawTransaction not implemented")
}
func (*UnimplementedAdapterServer) SignTransaction(ctx context.Context, req *SignTransactionRequest) (*SignTransactionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignTransaction not implemented")
}
func (*UnimplementedAdapterServer) SignTransactionBySecretKey(ctx context.Context, req *SignTransactionBySecretKeyRequest) (*SignTransactionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignTransactionBySecretKey not implemented")
}
func (*UnimplementedAdapterServer) SendTransaction(ctx context.Context, req *SendTransactionRequest) (*SendTransactionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendTransaction not implemented")
}
func (*UnimplementedAdapterServer) GetTransactionStatus(ctx context.Context, req *GetTransactionStatusRequest) (*GetTransactionStatusReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransactionStatus not implemented")
}
func (*UnimplementedAdapterServer) TransactionByHash(ctx context.Context, req *TransactionByHashRequest) (*TransactionByHashReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransactionByHash not implemented")
}

func RegisterAdapterServer(s *grpc.Server, srv AdapterServer) {
	s.RegisterService(&_Adapter_serviceDesc, srv)
}

func _Adapter_GetLastBlockHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).GetLastBlockHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/GetLastBlockHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).GetLastBlockHeight(ctx, req.(*BlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_GenerateAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).GenerateAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/GenerateAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).GenerateAddress(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_ValidateAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).ValidateAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/ValidateAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).ValidateAddress(ctx, req.(*AddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_Fee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FeeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).Fee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/Fee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).Fee(ctx, req.(*FeeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).GetBalance(ctx, req.(*AddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_GetAllBalances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).GetAllBalances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/GetAllBalances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).GetAllBalances(ctx, req.(*AddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_GetRawTransactionBySendersAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RawTransactionBySendersAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).GetRawTransactionBySendersAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/GetRawTransactionBySendersAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).GetRawTransactionBySendersAddress(ctx, req.(*RawTransactionBySendersAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_GetRawTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RawTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).GetRawTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/GetRawTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).GetRawTransaction(ctx, req.(*RawTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_SignTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).SignTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/SignTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).SignTransaction(ctx, req.(*SignTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_SignTransactionBySecretKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignTransactionBySecretKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).SignTransactionBySecretKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/SignTransactionBySecretKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).SignTransactionBySecretKey(ctx, req.(*SignTransactionBySecretKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_SendTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).SendTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/SendTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).SendTransaction(ctx, req.(*SendTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_GetTransactionStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).GetTransactionStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/GetTransactionStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).GetTransactionStatus(ctx, req.(*GetTransactionStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_TransactionByHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionByHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).TransactionByHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/TransactionByHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).TransactionByHash(ctx, req.(*TransactionByHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Adapter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "blockchain.Adapter",
	HandlerType: (*AdapterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLastBlockHeight",
			Handler:    _Adapter_GetLastBlockHeight_Handler,
		},
		{
			MethodName: "GenerateAddress",
			Handler:    _Adapter_GenerateAddress_Handler,
		},
		{
			MethodName: "ValidateAddress",
			Handler:    _Adapter_ValidateAddress_Handler,
		},
		{
			MethodName: "Fee",
			Handler:    _Adapter_Fee_Handler,
		},
		{
			MethodName: "GetBalance",
			Handler:    _Adapter_GetBalance_Handler,
		},
		{
			MethodName: "GetAllBalances",
			Handler:    _Adapter_GetAllBalances_Handler,
		},
		{
			MethodName: "GetRawTransactionBySendersAddress",
			Handler:    _Adapter_GetRawTransactionBySendersAddress_Handler,
		},
		{
			MethodName: "GetRawTransaction",
			Handler:    _Adapter_GetRawTransaction_Handler,
		},
		{
			MethodName: "SignTransaction",
			Handler:    _Adapter_SignTransaction_Handler,
		},
		{
			MethodName: "SignTransactionBySecretKey",
			Handler:    _Adapter_SignTransactionBySecretKey_Handler,
		},
		{
			MethodName: "SendTransaction",
			Handler:    _Adapter_SendTransaction_Handler,
		},
		{
			MethodName: "GetTransactionStatus",
			Handler:    _Adapter_GetTransactionStatus_Handler,
		},
		{
			MethodName: "TransactionByHash",
			Handler:    _Adapter_TransactionByHash_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "waves_adapter.proto",
}
