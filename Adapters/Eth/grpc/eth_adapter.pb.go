// Code generated by protoc-gen-go. DO NOT EDIT.
// source: eth_adapter.proto

package blockchain

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message for getting suggested gas price
type GasPriceRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GasPriceRequest) Reset()         { *m = GasPriceRequest{} }
func (m *GasPriceRequest) String() string { return proto.CompactTextString(m) }
func (*GasPriceRequest) ProtoMessage()    {}
func (*GasPriceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3043ca784e1536, []int{0}
}

func (m *GasPriceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GasPriceRequest.Unmarshal(m, b)
}
func (m *GasPriceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GasPriceRequest.Marshal(b, m, deterministic)
}
func (m *GasPriceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GasPriceRequest.Merge(m, src)
}
func (m *GasPriceRequest) XXX_Size() int {
	return xxx_messageInfo_GasPriceRequest.Size(m)
}
func (m *GasPriceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GasPriceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GasPriceRequest proto.InternalMessageInfo

// The request message for getting information by account address
type AddressRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressRequest) Reset()         { *m = AddressRequest{} }
func (m *AddressRequest) String() string { return proto.CompactTextString(m) }
func (*AddressRequest) ProtoMessage()    {}
func (*AddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3043ca784e1536, []int{1}
}

func (m *AddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressRequest.Unmarshal(m, b)
}
func (m *AddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressRequest.Marshal(b, m, deterministic)
}
func (m *AddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressRequest.Merge(m, src)
}
func (m *AddressRequest) XXX_Size() int {
	return xxx_messageInfo_AddressRequest.Size(m)
}
func (m *AddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddressRequest proto.InternalMessageInfo

func (m *AddressRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// empty request message
type EmptyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyRequest) Reset()         { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()    {}
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3043ca784e1536, []int{2}
}

func (m *EmptyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyRequest.Unmarshal(m, b)
}
func (m *EmptyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyRequest.Marshal(b, m, deterministic)
}
func (m *EmptyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyRequest.Merge(m, src)
}
func (m *EmptyRequest) XXX_Size() int {
	return xxx_messageInfo_EmptyRequest.Size(m)
}
func (m *EmptyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyRequest proto.InternalMessageInfo

// The request message for singing transaction
type SignTransactionRequest struct {
	SenderAddress        string   `protobuf:"bytes,1,opt,name=senderAddress,proto3" json:"senderAddress,omitempty"`
	Tx                   []byte   `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignTransactionRequest) Reset()         { *m = SignTransactionRequest{} }
func (m *SignTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SignTransactionRequest) ProtoMessage()    {}
func (*SignTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3043ca784e1536, []int{3}
}

func (m *SignTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignTransactionRequest.Unmarshal(m, b)
}
func (m *SignTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignTransactionRequest.Marshal(b, m, deterministic)
}
func (m *SignTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignTransactionRequest.Merge(m, src)
}
func (m *SignTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SignTransactionRequest.Size(m)
}
func (m *SignTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignTransactionRequest proto.InternalMessageInfo

func (m *SignTransactionRequest) GetSenderAddress() string {
	if m != nil {
		return m.SenderAddress
	}
	return ""
}

func (m *SignTransactionRequest) GetTx() []byte {
	if m != nil {
		return m.Tx
	}
	return nil
}

// The request message for singing transaction by private key in parameters
type SignTransactionWithPrivateKeyRequest struct {
	PrivateKey           string   `protobuf:"bytes,1,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	Tx                   []byte   `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignTransactionWithPrivateKeyRequest) Reset()         { *m = SignTransactionWithPrivateKeyRequest{} }
func (m *SignTransactionWithPrivateKeyRequest) String() string { return proto.CompactTextString(m) }
func (*SignTransactionWithPrivateKeyRequest) ProtoMessage()    {}
func (*SignTransactionWithPrivateKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3043ca784e1536, []int{4}
}

func (m *SignTransactionWithPrivateKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignTransactionWithPrivateKeyRequest.Unmarshal(m, b)
}
func (m *SignTransactionWithPrivateKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignTransactionWithPrivateKeyRequest.Marshal(b, m, deterministic)
}
func (m *SignTransactionWithPrivateKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignTransactionWithPrivateKeyRequest.Merge(m, src)
}
func (m *SignTransactionWithPrivateKeyRequest) XXX_Size() int {
	return xxx_messageInfo_SignTransactionWithPrivateKeyRequest.Size(m)
}
func (m *SignTransactionWithPrivateKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignTransactionWithPrivateKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignTransactionWithPrivateKeyRequest proto.InternalMessageInfo

func (m *SignTransactionWithPrivateKeyRequest) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *SignTransactionWithPrivateKeyRequest) GetTx() []byte {
	if m != nil {
		return m.Tx
	}
	return nil
}

// The request message for singing transaction
type SendTransactionRequest struct {
	Tx                   []byte   `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendTransactionRequest) Reset()         { *m = SendTransactionRequest{} }
func (m *SendTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SendTransactionRequest) ProtoMessage()    {}
func (*SendTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3043ca784e1536, []int{5}
}

func (m *SendTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionRequest.Unmarshal(m, b)
}
func (m *SendTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionRequest.Marshal(b, m, deterministic)
}
func (m *SendTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionRequest.Merge(m, src)
}
func (m *SendTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SendTransactionRequest.Size(m)
}
func (m *SendTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionRequest proto.InternalMessageInfo

func (m *SendTransactionRequest) GetTx() []byte {
	if m != nil {
		return m.Tx
	}
	return nil
}

// The request message for getting transaction's status containing tx hash
type GetTransactionStatusRequest struct {
	TxHash               string   `protobuf:"bytes,1,opt,name=txHash,proto3" json:"txHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionStatusRequest) Reset()         { *m = GetTransactionStatusRequest{} }
func (m *GetTransactionStatusRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionStatusRequest) ProtoMessage()    {}
func (*GetTransactionStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3043ca784e1536, []int{6}
}

func (m *GetTransactionStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionStatusRequest.Unmarshal(m, b)
}
func (m *GetTransactionStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionStatusRequest.Marshal(b, m, deterministic)
}
func (m *GetTransactionStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionStatusRequest.Merge(m, src)
}
func (m *GetTransactionStatusRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransactionStatusRequest.Size(m)
}
func (m *GetTransactionStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionStatusRequest proto.InternalMessageInfo

func (m *GetTransactionStatusRequest) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

// The request message for raw transaction creation
type RawTransactionRequest struct {
	AddressFrom          string   `protobuf:"bytes,1,opt,name=addressFrom,proto3" json:"addressFrom,omitempty"`
	AddressTo            string   `protobuf:"bytes,2,opt,name=addressTo,proto3" json:"addressTo,omitempty"`
	Amount               string   `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RawTransactionRequest) Reset()         { *m = RawTransactionRequest{} }
func (m *RawTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*RawTransactionRequest) ProtoMessage()    {}
func (*RawTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3043ca784e1536, []int{7}
}

func (m *RawTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawTransactionRequest.Unmarshal(m, b)
}
func (m *RawTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawTransactionRequest.Marshal(b, m, deterministic)
}
func (m *RawTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawTransactionRequest.Merge(m, src)
}
func (m *RawTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_RawTransactionRequest.Size(m)
}
func (m *RawTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RawTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RawTransactionRequest proto.InternalMessageInfo

func (m *RawTransactionRequest) GetAddressFrom() string {
	if m != nil {
		return m.AddressFrom
	}
	return ""
}

func (m *RawTransactionRequest) GetAddressTo() string {
	if m != nil {
		return m.AddressTo
	}
	return ""
}

func (m *RawTransactionRequest) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

// The request message for raw transaction creation
type Erc20RawTransactionRequest struct {
	AddressFrom          string   `protobuf:"bytes,1,opt,name=addressFrom,proto3" json:"addressFrom,omitempty"`
	AddressTo            string   `protobuf:"bytes,2,opt,name=addressTo,proto3" json:"addressTo,omitempty"`
	Amount               string   `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Contract             string   `protobuf:"bytes,4,opt,name=contract,proto3" json:"contract,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Erc20RawTransactionRequest) Reset()         { *m = Erc20RawTransactionRequest{} }
func (m *Erc20RawTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*Erc20RawTransactionRequest) ProtoMessage()    {}
func (*Erc20RawTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3043ca784e1536, []int{8}
}

func (m *Erc20RawTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Erc20RawTransactionRequest.Unmarshal(m, b)
}
func (m *Erc20RawTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Erc20RawTransactionRequest.Marshal(b, m, deterministic)
}
func (m *Erc20RawTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Erc20RawTransactionRequest.Merge(m, src)
}
func (m *Erc20RawTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_Erc20RawTransactionRequest.Size(m)
}
func (m *Erc20RawTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Erc20RawTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Erc20RawTransactionRequest proto.InternalMessageInfo

func (m *Erc20RawTransactionRequest) GetAddressFrom() string {
	if m != nil {
		return m.AddressFrom
	}
	return ""
}

func (m *Erc20RawTransactionRequest) GetAddressTo() string {
	if m != nil {
		return m.AddressTo
	}
	return ""
}

func (m *Erc20RawTransactionRequest) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *Erc20RawTransactionRequest) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

// The response message containing the suggested gas price
type GasPriceReply struct {
	GasPrice             string   `protobuf:"bytes,1,opt,name=gasPrice,proto3" json:"gasPrice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GasPriceReply) Reset()         { *m = GasPriceReply{} }
func (m *GasPriceReply) String() string { return proto.CompactTextString(m) }
func (*GasPriceReply) ProtoMessage()    {}
func (*GasPriceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3043ca784e1536, []int{9}
}

func (m *GasPriceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GasPriceReply.Unmarshal(m, b)
}
func (m *GasPriceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GasPriceReply.Marshal(b, m, deterministic)
}
func (m *GasPriceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GasPriceReply.Merge(m, src)
}
func (m *GasPriceReply) XXX_Size() int {
	return xxx_messageInfo_GasPriceReply.Size(m)
}
func (m *GasPriceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GasPriceReply.DiscardUnknown(m)
}

var xxx_messageInfo_GasPriceReply proto.InternalMessageInfo

func (m *GasPriceReply) GetGasPrice() string {
	if m != nil {
		return m.GasPrice
	}
	return ""
}

// The response message containing raw transaction
type RawTransactionReply struct {
	Tx                   []byte   `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RawTransactionReply) Reset()         { *m = RawTransactionReply{} }
func (m *RawTransactionReply) String() string { return proto.CompactTextString(m) }
func (*RawTransactionReply) ProtoMessage()    {}
func (*RawTransactionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3043ca784e1536, []int{10}
}

func (m *RawTransactionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawTransactionReply.Unmarshal(m, b)
}
func (m *RawTransactionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawTransactionReply.Marshal(b, m, deterministic)
}
func (m *RawTransactionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawTransactionReply.Merge(m, src)
}
func (m *RawTransactionReply) XXX_Size() int {
	return xxx_messageInfo_RawTransactionReply.Size(m)
}
func (m *RawTransactionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RawTransactionReply.DiscardUnknown(m)
}

var xxx_messageInfo_RawTransactionReply proto.InternalMessageInfo

func (m *RawTransactionReply) GetTx() []byte {
	if m != nil {
		return m.Tx
	}
	return nil
}

// The response message containing suggested transaction's fee
type SuggestFeeReply struct {
	Fee                  string   `protobuf:"bytes,1,opt,name=fee,proto3" json:"fee,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuggestFeeReply) Reset()         { *m = SuggestFeeReply{} }
func (m *SuggestFeeReply) String() string { return proto.CompactTextString(m) }
func (*SuggestFeeReply) ProtoMessage()    {}
func (*SuggestFeeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3043ca784e1536, []int{11}
}

func (m *SuggestFeeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestFeeReply.Unmarshal(m, b)
}
func (m *SuggestFeeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestFeeReply.Marshal(b, m, deterministic)
}
func (m *SuggestFeeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestFeeReply.Merge(m, src)
}
func (m *SuggestFeeReply) XXX_Size() int {
	return xxx_messageInfo_SuggestFeeReply.Size(m)
}
func (m *SuggestFeeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestFeeReply.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestFeeReply proto.InternalMessageInfo

func (m *SuggestFeeReply) GetFee() string {
	if m != nil {
		return m.Fee
	}
	return ""
}

// The response message containing account's next nonce
type GetNextNonceReply struct {
	Nonce                int64    `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNextNonceReply) Reset()         { *m = GetNextNonceReply{} }
func (m *GetNextNonceReply) String() string { return proto.CompactTextString(m) }
func (*GetNextNonceReply) ProtoMessage()    {}
func (*GetNextNonceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3043ca784e1536, []int{12}
}

func (m *GetNextNonceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNextNonceReply.Unmarshal(m, b)
}
func (m *GetNextNonceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNextNonceReply.Marshal(b, m, deterministic)
}
func (m *GetNextNonceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNextNonceReply.Merge(m, src)
}
func (m *GetNextNonceReply) XXX_Size() int {
	return xxx_messageInfo_GetNextNonceReply.Size(m)
}
func (m *GetNextNonceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNextNonceReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetNextNonceReply proto.InternalMessageInfo

func (m *GetNextNonceReply) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

// The response message containing account's balance
type GetEthBalanceReply struct {
	Balance              string   `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEthBalanceReply) Reset()         { *m = GetEthBalanceReply{} }
func (m *GetEthBalanceReply) String() string { return proto.CompactTextString(m) }
func (*GetEthBalanceReply) ProtoMessage()    {}
func (*GetEthBalanceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3043ca784e1536, []int{13}
}

func (m *GetEthBalanceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEthBalanceReply.Unmarshal(m, b)
}
func (m *GetEthBalanceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEthBalanceReply.Marshal(b, m, deterministic)
}
func (m *GetEthBalanceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEthBalanceReply.Merge(m, src)
}
func (m *GetEthBalanceReply) XXX_Size() int {
	return xxx_messageInfo_GetEthBalanceReply.Size(m)
}
func (m *GetEthBalanceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEthBalanceReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetEthBalanceReply proto.InternalMessageInfo

func (m *GetEthBalanceReply) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

// The request message to get account's balances: eth and requested tokens
type GetAllBalanceRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Contracts            []string `protobuf:"bytes,2,rep,name=contracts,proto3" json:"contracts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllBalanceRequest) Reset()         { *m = GetAllBalanceRequest{} }
func (m *GetAllBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllBalanceRequest) ProtoMessage()    {}
func (*GetAllBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3043ca784e1536, []int{14}
}

func (m *GetAllBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllBalanceRequest.Unmarshal(m, b)
}
func (m *GetAllBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllBalanceRequest.Marshal(b, m, deterministic)
}
func (m *GetAllBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllBalanceRequest.Merge(m, src)
}
func (m *GetAllBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllBalanceRequest.Size(m)
}
func (m *GetAllBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllBalanceRequest proto.InternalMessageInfo

func (m *GetAllBalanceRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GetAllBalanceRequest) GetContracts() []string {
	if m != nil {
		return m.Contracts
	}
	return nil
}

// The response message containing generated address
type GenerateAddressReply struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenerateAddressReply) Reset()         { *m = GenerateAddressReply{} }
func (m *GenerateAddressReply) String() string { return proto.CompactTextString(m) }
func (*GenerateAddressReply) ProtoMessage()    {}
func (*GenerateAddressReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3043ca784e1536, []int{15}
}

func (m *GenerateAddressReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateAddressReply.Unmarshal(m, b)
}
func (m *GenerateAddressReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateAddressReply.Marshal(b, m, deterministic)
}
func (m *GenerateAddressReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateAddressReply.Merge(m, src)
}
func (m *GenerateAddressReply) XXX_Size() int {
	return xxx_messageInfo_GenerateAddressReply.Size(m)
}
func (m *GenerateAddressReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateAddressReply.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateAddressReply proto.InternalMessageInfo

func (m *GenerateAddressReply) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// The response message containing result of address's validation
type ValidateAddressReply struct {
	Valid                bool     `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateAddressReply) Reset()         { *m = ValidateAddressReply{} }
func (m *ValidateAddressReply) String() string { return proto.CompactTextString(m) }
func (*ValidateAddressReply) ProtoMessage()    {}
func (*ValidateAddressReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3043ca784e1536, []int{16}
}

func (m *ValidateAddressReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateAddressReply.Unmarshal(m, b)
}
func (m *ValidateAddressReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateAddressReply.Marshal(b, m, deterministic)
}
func (m *ValidateAddressReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateAddressReply.Merge(m, src)
}
func (m *ValidateAddressReply) XXX_Size() int {
	return xxx_messageInfo_ValidateAddressReply.Size(m)
}
func (m *ValidateAddressReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateAddressReply.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateAddressReply proto.InternalMessageInfo

func (m *ValidateAddressReply) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

// The response message containing signed transaction
type SignTransactionReply struct {
	Tx                   []byte   `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignTransactionReply) Reset()         { *m = SignTransactionReply{} }
func (m *SignTransactionReply) String() string { return proto.CompactTextString(m) }
func (*SignTransactionReply) ProtoMessage()    {}
func (*SignTransactionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3043ca784e1536, []int{17}
}

func (m *SignTransactionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignTransactionReply.Unmarshal(m, b)
}
func (m *SignTransactionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignTransactionReply.Marshal(b, m, deterministic)
}
func (m *SignTransactionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignTransactionReply.Merge(m, src)
}
func (m *SignTransactionReply) XXX_Size() int {
	return xxx_messageInfo_SignTransactionReply.Size(m)
}
func (m *SignTransactionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SignTransactionReply.DiscardUnknown(m)
}

var xxx_messageInfo_SignTransactionReply proto.InternalMessageInfo

func (m *SignTransactionReply) GetTx() []byte {
	if m != nil {
		return m.Tx
	}
	return nil
}

// The response message containing transaction's txHash
type SendTransactionReply struct {
	TxHash               string   `protobuf:"bytes,1,opt,name=txHash,proto3" json:"txHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendTransactionReply) Reset()         { *m = SendTransactionReply{} }
func (m *SendTransactionReply) String() string { return proto.CompactTextString(m) }
func (*SendTransactionReply) ProtoMessage()    {}
func (*SendTransactionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3043ca784e1536, []int{18}
}

func (m *SendTransactionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionReply.Unmarshal(m, b)
}
func (m *SendTransactionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionReply.Marshal(b, m, deterministic)
}
func (m *SendTransactionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionReply.Merge(m, src)
}
func (m *SendTransactionReply) XXX_Size() int {
	return xxx_messageInfo_SendTransactionReply.Size(m)
}
func (m *SendTransactionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionReply.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionReply proto.InternalMessageInfo

func (m *SendTransactionReply) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

// The response message containing transaction's status: UNKNOWN, PENDING, SUCCESS
type GetTransactionStatusReply struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionStatusReply) Reset()         { *m = GetTransactionStatusReply{} }
func (m *GetTransactionStatusReply) String() string { return proto.CompactTextString(m) }
func (*GetTransactionStatusReply) ProtoMessage()    {}
func (*GetTransactionStatusReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3043ca784e1536, []int{19}
}

func (m *GetTransactionStatusReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionStatusReply.Unmarshal(m, b)
}
func (m *GetTransactionStatusReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionStatusReply.Marshal(b, m, deterministic)
}
func (m *GetTransactionStatusReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionStatusReply.Merge(m, src)
}
func (m *GetTransactionStatusReply) XXX_Size() int {
	return xxx_messageInfo_GetTransactionStatusReply.Size(m)
}
func (m *GetTransactionStatusReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionStatusReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionStatusReply proto.InternalMessageInfo

func (m *GetTransactionStatusReply) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// The response message containing account's balance: eth and requested tokens
type GetAllBalanceReply struct {
	Amount               string                             `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	TokenBalances        []*GetAllBalanceReply_TokenBalance `protobuf:"bytes,2,rep,name=tokenBalances,proto3" json:"tokenBalances,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *GetAllBalanceReply) Reset()         { *m = GetAllBalanceReply{} }
func (m *GetAllBalanceReply) String() string { return proto.CompactTextString(m) }
func (*GetAllBalanceReply) ProtoMessage()    {}
func (*GetAllBalanceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3043ca784e1536, []int{20}
}

func (m *GetAllBalanceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllBalanceReply.Unmarshal(m, b)
}
func (m *GetAllBalanceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllBalanceReply.Marshal(b, m, deterministic)
}
func (m *GetAllBalanceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllBalanceReply.Merge(m, src)
}
func (m *GetAllBalanceReply) XXX_Size() int {
	return xxx_messageInfo_GetAllBalanceReply.Size(m)
}
func (m *GetAllBalanceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllBalanceReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllBalanceReply proto.InternalMessageInfo

func (m *GetAllBalanceReply) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *GetAllBalanceReply) GetTokenBalances() []*GetAllBalanceReply_TokenBalance {
	if m != nil {
		return m.TokenBalances
	}
	return nil
}

type GetAllBalanceReply_TokenBalance struct {
	Contract             string   `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	Amount               string   `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllBalanceReply_TokenBalance) Reset()         { *m = GetAllBalanceReply_TokenBalance{} }
func (m *GetAllBalanceReply_TokenBalance) String() string { return proto.CompactTextString(m) }
func (*GetAllBalanceReply_TokenBalance) ProtoMessage()    {}
func (*GetAllBalanceReply_TokenBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3043ca784e1536, []int{20, 0}
}

func (m *GetAllBalanceReply_TokenBalance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllBalanceReply_TokenBalance.Unmarshal(m, b)
}
func (m *GetAllBalanceReply_TokenBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllBalanceReply_TokenBalance.Marshal(b, m, deterministic)
}
func (m *GetAllBalanceReply_TokenBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllBalanceReply_TokenBalance.Merge(m, src)
}
func (m *GetAllBalanceReply_TokenBalance) XXX_Size() int {
	return xxx_messageInfo_GetAllBalanceReply_TokenBalance.Size(m)
}
func (m *GetAllBalanceReply_TokenBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllBalanceReply_TokenBalance.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllBalanceReply_TokenBalance proto.InternalMessageInfo

func (m *GetAllBalanceReply_TokenBalance) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *GetAllBalanceReply_TokenBalance) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func init() {
	proto.RegisterType((*GasPriceRequest)(nil), "blockchain.GasPriceRequest")
	proto.RegisterType((*AddressRequest)(nil), "blockchain.AddressRequest")
	proto.RegisterType((*EmptyRequest)(nil), "blockchain.EmptyRequest")
	proto.RegisterType((*SignTransactionRequest)(nil), "blockchain.SignTransactionRequest")
	proto.RegisterType((*SignTransactionWithPrivateKeyRequest)(nil), "blockchain.SignTransactionWithPrivateKeyRequest")
	proto.RegisterType((*SendTransactionRequest)(nil), "blockchain.SendTransactionRequest")
	proto.RegisterType((*GetTransactionStatusRequest)(nil), "blockchain.GetTransactionStatusRequest")
	proto.RegisterType((*RawTransactionRequest)(nil), "blockchain.RawTransactionRequest")
	proto.RegisterType((*Erc20RawTransactionRequest)(nil), "blockchain.Erc20RawTransactionRequest")
	proto.RegisterType((*GasPriceReply)(nil), "blockchain.GasPriceReply")
	proto.RegisterType((*RawTransactionReply)(nil), "blockchain.RawTransactionReply")
	proto.RegisterType((*SuggestFeeReply)(nil), "blockchain.SuggestFeeReply")
	proto.RegisterType((*GetNextNonceReply)(nil), "blockchain.GetNextNonceReply")
	proto.RegisterType((*GetEthBalanceReply)(nil), "blockchain.GetEthBalanceReply")
	proto.RegisterType((*GetAllBalanceRequest)(nil), "blockchain.GetAllBalanceRequest")
	proto.RegisterType((*GenerateAddressReply)(nil), "blockchain.GenerateAddressReply")
	proto.RegisterType((*ValidateAddressReply)(nil), "blockchain.ValidateAddressReply")
	proto.RegisterType((*SignTransactionReply)(nil), "blockchain.SignTransactionReply")
	proto.RegisterType((*SendTransactionReply)(nil), "blockchain.SendTransactionReply")
	proto.RegisterType((*GetTransactionStatusReply)(nil), "blockchain.GetTransactionStatusReply")
	proto.RegisterType((*GetAllBalanceReply)(nil), "blockchain.GetAllBalanceReply")
	proto.RegisterType((*GetAllBalanceReply_TokenBalance)(nil), "blockchain.GetAllBalanceReply.TokenBalance")
}

func init() { proto.RegisterFile("eth_adapter.proto", fileDescriptor_1a3043ca784e1536) }

var fileDescriptor_1a3043ca784e1536 = []byte{
	// 808 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xef, 0x6e, 0xda, 0x48,
	0x10, 0xb7, 0xe1, 0xf2, 0x87, 0x09, 0x84, 0xcb, 0x86, 0x43, 0x8e, 0x73, 0xc9, 0x71, 0x7b, 0x49,
	0x8e, 0xbb, 0x54, 0x56, 0x94, 0xa8, 0x0f, 0x00, 0x2a, 0xa1, 0x52, 0x54, 0x4a, 0x4c, 0x94, 0xaa,
	0x9f, 0xaa, 0x8d, 0xd9, 0x62, 0x2b, 0xc4, 0xa6, 0xf6, 0x92, 0x92, 0xaf, 0x7d, 0x82, 0xbe, 0x53,
	0x5f, 0xac, 0xb2, 0xbd, 0x36, 0xde, 0xc5, 0x90, 0x7c, 0xea, 0x37, 0x66, 0x3c, 0xf3, 0x9b, 0xd9,
	0xe1, 0x37, 0xbf, 0x5d, 0xd8, 0xa1, 0xcc, 0xfe, 0x44, 0x86, 0x64, 0xc2, 0xa8, 0x6f, 0x4c, 0x7c,
	0x8f, 0x79, 0x08, 0xee, 0xc6, 0x9e, 0x75, 0x6f, 0xd9, 0xc4, 0x71, 0xf1, 0x0e, 0x54, 0xbb, 0x24,
	0xe8, 0xfb, 0x8e, 0x45, 0x4d, 0xfa, 0x65, 0x4a, 0x03, 0x86, 0xff, 0x87, 0xed, 0xd6, 0x70, 0xe8,
	0xd3, 0x20, 0xe0, 0x1e, 0xa4, 0xc1, 0x06, 0x89, 0x3d, 0x9a, 0xda, 0x50, 0x9b, 0x25, 0x33, 0x31,
	0xf1, 0x36, 0x94, 0x3b, 0x0f, 0x13, 0xf6, 0x94, 0xe4, 0xf6, 0xa0, 0x3e, 0x70, 0x46, 0xee, 0x8d,
	0x4f, 0xdc, 0x80, 0x58, 0xcc, 0xf1, 0xdc, 0x04, 0xe3, 0x08, 0x2a, 0x01, 0x75, 0x87, 0xd4, 0x6f,
	0x09, 0x48, 0xa2, 0x13, 0x6d, 0x43, 0x81, 0xcd, 0xb4, 0x42, 0x43, 0x6d, 0x96, 0xcd, 0x02, 0x9b,
	0xe1, 0x5b, 0x38, 0x92, 0xf0, 0x3e, 0x38, 0xcc, 0xee, 0xfb, 0xce, 0x23, 0x61, 0xf4, 0x8a, 0x26,
	0x75, 0xd1, 0x21, 0xc0, 0x24, 0x75, 0x72, 0xe8, 0x8c, 0x67, 0x01, 0xb7, 0x09, 0xf5, 0x01, 0x75,
	0x87, 0x39, 0x7d, 0xc6, 0x91, 0x6a, 0x1a, 0xf9, 0x1a, 0xf6, 0xbb, 0x94, 0x65, 0x02, 0x07, 0x8c,
	0xb0, 0x69, 0x3a, 0x9a, 0x3a, 0xac, 0xb3, 0xd9, 0x5b, 0x12, 0xd8, 0xbc, 0x28, 0xb7, 0xb0, 0x07,
	0x7f, 0x98, 0xe4, 0x6b, 0x0e, 0x7e, 0x03, 0xb6, 0xf8, 0xf0, 0x2e, 0x7d, 0xef, 0x81, 0x67, 0x65,
	0x5d, 0xe8, 0x4f, 0x28, 0x71, 0xf3, 0xc6, 0x8b, 0x5a, 0x2e, 0x99, 0x73, 0x47, 0x58, 0x90, 0x3c,
	0x78, 0x53, 0x97, 0x69, 0xc5, 0xb8, 0x60, 0x6c, 0xe1, 0xef, 0x2a, 0xe8, 0x1d, 0xdf, 0x3a, 0x3f,
	0xfb, 0xa5, 0x65, 0x91, 0x0e, 0x9b, 0x96, 0xe7, 0x32, 0x9f, 0x58, 0x4c, 0xfb, 0x2d, 0xfa, 0x92,
	0xda, 0xf8, 0x14, 0x2a, 0x73, 0x6e, 0x4d, 0xc6, 0x4f, 0x61, 0xf0, 0x88, 0x3b, 0x78, 0x07, 0xa9,
	0x8d, 0x8f, 0x61, 0x57, 0xee, 0x3c, 0x4c, 0x91, 0xff, 0x8e, 0x7f, 0xa0, 0x3a, 0x98, 0x8e, 0x46,
	0x34, 0x60, 0x97, 0x94, 0xa3, 0xfe, 0x0e, 0xc5, 0xcf, 0x34, 0x01, 0x0c, 0x7f, 0xe2, 0xff, 0x60,
	0xa7, 0x4b, 0x59, 0x8f, 0xce, 0x58, 0xcf, 0x73, 0x93, 0xe2, 0x35, 0x58, 0x73, 0x43, 0x2b, 0x0a,
	0x2c, 0x9a, 0xb1, 0x81, 0x0d, 0x40, 0x5d, 0xca, 0x3a, 0xcc, 0x6e, 0x93, 0x31, 0x49, 0x63, 0x35,
	0xd8, 0xb8, 0x8b, 0xed, 0x84, 0xf0, 0xdc, 0xc4, 0x3d, 0xa8, 0x75, 0x29, 0x6b, 0x8d, 0xc7, 0x69,
	0xfc, 0x33, 0x2b, 0x12, 0xce, 0x35, 0x99, 0x48, 0xa0, 0x15, 0x1a, 0xc5, 0x70, 0xae, 0xa9, 0x03,
	0x9f, 0x85, 0x78, 0x2e, 0xf5, 0x09, 0xa3, 0xe9, 0xd2, 0xf1, 0x0e, 0x96, 0xac, 0xdc, 0x2b, 0xa8,
	0xdd, 0x92, 0xb1, 0x33, 0x94, 0x33, 0x6a, 0xb0, 0xf6, 0x18, 0xfa, 0xa3, 0xf8, 0x4d, 0x33, 0x36,
	0xf0, 0x09, 0xd4, 0x16, 0x16, 0x32, 0x6f, 0xae, 0x06, 0xd4, 0x16, 0x16, 0x22, 0x8c, 0x5b, 0xc6,
	0xef, 0x0b, 0xd8, 0xcb, 0x5f, 0x0b, 0x9e, 0x14, 0x44, 0x66, 0x92, 0x14, 0x5b, 0xf8, 0x87, 0x1a,
	0x4d, 0x3b, 0x3b, 0x3d, 0x1e, 0xce, 0xb9, 0xa5, 0x0a, 0xdc, 0xba, 0x86, 0x0a, 0xf3, 0xee, 0xa9,
	0xcb, 0x83, 0xe3, 0xe9, 0x6d, 0x9d, 0x9f, 0x1a, 0x73, 0xfd, 0x32, 0x16, 0xe1, 0x8c, 0x9b, 0x4c,
	0x8e, 0x29, 0x22, 0xe8, 0x6d, 0x28, 0x67, 0x3f, 0x0b, 0xf4, 0x55, 0x45, 0xfa, 0x66, 0xda, 0x2a,
	0x64, 0xdb, 0x3a, 0xff, 0x56, 0x82, 0x8d, 0x56, 0x2c, 0xa8, 0xe8, 0x0d, 0x6c, 0x26, 0x14, 0x47,
	0xfb, 0x42, 0x5f, 0xa2, 0xa8, 0xea, 0x7b, 0xf9, 0x1f, 0x27, 0xe3, 0x27, 0xac, 0xa0, 0x8f, 0x11,
	0x5f, 0x45, 0xfa, 0xa3, 0xbf, 0xb3, 0x19, 0xb9, 0x4b, 0xad, 0xff, 0xb5, 0x2a, 0x24, 0x86, 0xb6,
	0xa0, 0x1e, 0xf2, 0x7b, 0x51, 0x18, 0xd0, 0x49, 0x36, 0x79, 0xb9, 0x72, 0xbc, 0xa4, 0x48, 0x07,
	0x60, 0xbe, 0x94, 0x48, 0x13, 0x80, 0x33, 0xb7, 0x83, 0x2e, 0x4c, 0x48, 0x5a, 0x63, 0xac, 0xa0,
	0x2b, 0x28, 0x67, 0xd7, 0x16, 0xe9, 0xd9, 0x70, 0xf1, 0x4a, 0xd2, 0x0f, 0x24, 0x12, 0x88, 0xcb,
	0x8e, 0x15, 0xf4, 0x0e, 0x2a, 0xc2, 0x62, 0xaf, 0x44, 0x3b, 0x94, 0xd0, 0x24, 0x3d, 0xc0, 0x0a,
	0x1a, 0x44, 0x70, 0x73, 0xaa, 0xa1, 0xc6, 0x0a, 0x16, 0xe6, 0x83, 0x4a, 0x3c, 0xc5, 0x0a, 0x7a,
	0x0f, 0x55, 0x69, 0xf9, 0x57, 0x0c, 0x4f, 0x2a, 0xb8, 0xa8, 0x19, 0x58, 0x41, 0xd7, 0x50, 0x95,
	0xb4, 0x61, 0xe5, 0xb1, 0x05, 0xc8, 0x3c, 0x51, 0x89, 0xb8, 0x59, 0x95, 0x04, 0x04, 0x61, 0xe1,
	0x6f, 0xcc, 0xbd, 0xee, 0x45, 0xe8, 0x3c, 0x05, 0xc2, 0x0a, 0x9a, 0xc2, 0xc1, 0xca, 0xcb, 0x1d,
	0x9d, 0xad, 0x00, 0xc9, 0x7d, 0x07, 0xbc, 0xa8, 0x6c, 0x78, 0x22, 0x51, 0xea, 0xa4, 0x13, 0xe5,
	0x3e, 0x0c, 0x24, 0xe8, 0x1c, 0xad, 0xc4, 0x0a, 0xb2, 0xa3, 0xdb, 0x61, 0x41, 0x15, 0xd1, 0xbf,
	0x12, 0x15, 0x96, 0x3d, 0x27, 0xf4, 0xe3, 0xe7, 0x03, 0xa3, 0x4a, 0xed, 0x26, 0xec, 0x3a, 0x9e,
	0x31, 0xf2, 0x27, 0x96, 0x91, 0x3c, 0xee, 0x28, 0xb3, 0xdb, 0xd5, 0x0e, 0xb3, 0xb9, 0x36, 0xf5,
	0xc3, 0xb7, 0x5e, 0x5f, 0xbd, 0x5b, 0x8f, 0x1e, 0x7d, 0x17, 0x3f, 0x03, 0x00, 0x00, 0xff, 0xff,
	0xb8, 0x48, 0x17, 0xfe, 0x09, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AdapterClient is the client API for Adapter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdapterClient interface {
	// Get suggested gas price
	GasPrice(ctx context.Context, in *GasPriceRequest, opts ...grpc.CallOption) (*GasPriceReply, error)
	// request to create raw transaction
	GetRawTransaction(ctx context.Context, in *RawTransactionRequest, opts ...grpc.CallOption) (*RawTransactionReply, error)
	// request to create raw transaction to transfer erc-20 tokens
	GetErc20RawTransaction(ctx context.Context, in *Erc20RawTransactionRequest, opts ...grpc.CallOption) (*RawTransactionReply, error)
	// Get suggested transaction's fee
	SuggestFee(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*SuggestFeeReply, error)
	// Get account's next nonce
	GetNextNonce(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*GetNextNonceReply, error)
	// Get account's balance
	GetEthBalance(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*GetEthBalanceReply, error)
	// Get account's balance and balances of requested tokens (contracts in request)
	GetAllBalance(ctx context.Context, in *GetAllBalanceRequest, opts ...grpc.CallOption) (*GetAllBalanceReply, error)
	// Generate address
	GenerateAddress(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GenerateAddressReply, error)
	// Validate address
	ValidateAddress(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*ValidateAddressReply, error)
	// Sing transaction
	SignTransaction(ctx context.Context, in *SignTransactionRequest, opts ...grpc.CallOption) (*SignTransactionReply, error)
	// Sing transaction by private key in parameters
	SignTransactionWithPrivateKey(ctx context.Context, in *SignTransactionWithPrivateKeyRequest, opts ...grpc.CallOption) (*SignTransactionReply, error)
	// Send transaction
	SendTransaction(ctx context.Context, in *SendTransactionRequest, opts ...grpc.CallOption) (*SendTransactionReply, error)
	// Get transaction status
	GetTransactionStatus(ctx context.Context, in *GetTransactionStatusRequest, opts ...grpc.CallOption) (*GetTransactionStatusReply, error)
}

type adapterClient struct {
	cc *grpc.ClientConn
}

func NewAdapterClient(cc *grpc.ClientConn) AdapterClient {
	return &adapterClient{cc}
}

func (c *adapterClient) GasPrice(ctx context.Context, in *GasPriceRequest, opts ...grpc.CallOption) (*GasPriceReply, error) {
	out := new(GasPriceReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/GasPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) GetRawTransaction(ctx context.Context, in *RawTransactionRequest, opts ...grpc.CallOption) (*RawTransactionReply, error) {
	out := new(RawTransactionReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/GetRawTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) GetErc20RawTransaction(ctx context.Context, in *Erc20RawTransactionRequest, opts ...grpc.CallOption) (*RawTransactionReply, error) {
	out := new(RawTransactionReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/GetErc20RawTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) SuggestFee(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*SuggestFeeReply, error) {
	out := new(SuggestFeeReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/SuggestFee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) GetNextNonce(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*GetNextNonceReply, error) {
	out := new(GetNextNonceReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/GetNextNonce", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) GetEthBalance(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*GetEthBalanceReply, error) {
	out := new(GetEthBalanceReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/GetEthBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) GetAllBalance(ctx context.Context, in *GetAllBalanceRequest, opts ...grpc.CallOption) (*GetAllBalanceReply, error) {
	out := new(GetAllBalanceReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/GetAllBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) GenerateAddress(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GenerateAddressReply, error) {
	out := new(GenerateAddressReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/GenerateAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) ValidateAddress(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*ValidateAddressReply, error) {
	out := new(ValidateAddressReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/ValidateAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) SignTransaction(ctx context.Context, in *SignTransactionRequest, opts ...grpc.CallOption) (*SignTransactionReply, error) {
	out := new(SignTransactionReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/SignTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) SignTransactionWithPrivateKey(ctx context.Context, in *SignTransactionWithPrivateKeyRequest, opts ...grpc.CallOption) (*SignTransactionReply, error) {
	out := new(SignTransactionReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/SignTransactionWithPrivateKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) SendTransaction(ctx context.Context, in *SendTransactionRequest, opts ...grpc.CallOption) (*SendTransactionReply, error) {
	out := new(SendTransactionReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/SendTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adapterClient) GetTransactionStatus(ctx context.Context, in *GetTransactionStatusRequest, opts ...grpc.CallOption) (*GetTransactionStatusReply, error) {
	out := new(GetTransactionStatusReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/GetTransactionStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdapterServer is the server API for Adapter service.
type AdapterServer interface {
	// Get suggested gas price
	GasPrice(context.Context, *GasPriceRequest) (*GasPriceReply, error)
	// request to create raw transaction
	GetRawTransaction(context.Context, *RawTransactionRequest) (*RawTransactionReply, error)
	// request to create raw transaction to transfer erc-20 tokens
	GetErc20RawTransaction(context.Context, *Erc20RawTransactionRequest) (*RawTransactionReply, error)
	// Get suggested transaction's fee
	SuggestFee(context.Context, *EmptyRequest) (*SuggestFeeReply, error)
	// Get account's next nonce
	GetNextNonce(context.Context, *AddressRequest) (*GetNextNonceReply, error)
	// Get account's balance
	GetEthBalance(context.Context, *AddressRequest) (*GetEthBalanceReply, error)
	// Get account's balance and balances of requested tokens (contracts in request)
	GetAllBalance(context.Context, *GetAllBalanceRequest) (*GetAllBalanceReply, error)
	// Generate address
	GenerateAddress(context.Context, *EmptyRequest) (*GenerateAddressReply, error)
	// Validate address
	ValidateAddress(context.Context, *AddressRequest) (*ValidateAddressReply, error)
	// Sing transaction
	SignTransaction(context.Context, *SignTransactionRequest) (*SignTransactionReply, error)
	// Sing transaction by private key in parameters
	SignTransactionWithPrivateKey(context.Context, *SignTransactionWithPrivateKeyRequest) (*SignTransactionReply, error)
	// Send transaction
	SendTransaction(context.Context, *SendTransactionRequest) (*SendTransactionReply, error)
	// Get transaction status
	GetTransactionStatus(context.Context, *GetTransactionStatusRequest) (*GetTransactionStatusReply, error)
}

func RegisterAdapterServer(s *grpc.Server, srv AdapterServer) {
	s.RegisterService(&_Adapter_serviceDesc, srv)
}

func _Adapter_GasPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GasPriceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).GasPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/GasPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).GasPrice(ctx, req.(*GasPriceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_GetRawTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RawTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).GetRawTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/GetRawTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).GetRawTransaction(ctx, req.(*RawTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_GetErc20RawTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Erc20RawTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).GetErc20RawTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/GetErc20RawTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).GetErc20RawTransaction(ctx, req.(*Erc20RawTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_SuggestFee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).SuggestFee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/SuggestFee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).SuggestFee(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_GetNextNonce_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).GetNextNonce(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/GetNextNonce",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).GetNextNonce(ctx, req.(*AddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_GetEthBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).GetEthBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/GetEthBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).GetEthBalance(ctx, req.(*AddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_GetAllBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).GetAllBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/GetAllBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).GetAllBalance(ctx, req.(*GetAllBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_GenerateAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).GenerateAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/GenerateAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).GenerateAddress(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_ValidateAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).ValidateAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/ValidateAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).ValidateAddress(ctx, req.(*AddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_SignTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).SignTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/SignTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).SignTransaction(ctx, req.(*SignTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_SignTransactionWithPrivateKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignTransactionWithPrivateKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).SignTransactionWithPrivateKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/SignTransactionWithPrivateKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).SignTransactionWithPrivateKey(ctx, req.(*SignTransactionWithPrivateKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_SendTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).SendTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/SendTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).SendTransaction(ctx, req.(*SendTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adapter_GetTransactionStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).GetTransactionStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/GetTransactionStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).GetTransactionStatus(ctx, req.(*GetTransactionStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Adapter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "blockchain.Adapter",
	HandlerType: (*AdapterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GasPrice",
			Handler:    _Adapter_GasPrice_Handler,
		},
		{
			MethodName: "GetRawTransaction",
			Handler:    _Adapter_GetRawTransaction_Handler,
		},
		{
			MethodName: "GetErc20RawTransaction",
			Handler:    _Adapter_GetErc20RawTransaction_Handler,
		},
		{
			MethodName: "SuggestFee",
			Handler:    _Adapter_SuggestFee_Handler,
		},
		{
			MethodName: "GetNextNonce",
			Handler:    _Adapter_GetNextNonce_Handler,
		},
		{
			MethodName: "GetEthBalance",
			Handler:    _Adapter_GetEthBalance_Handler,
		},
		{
			MethodName: "GetAllBalance",
			Handler:    _Adapter_GetAllBalance_Handler,
		},
		{
			MethodName: "GenerateAddress",
			Handler:    _Adapter_GenerateAddress_Handler,
		},
		{
			MethodName: "ValidateAddress",
			Handler:    _Adapter_ValidateAddress_Handler,
		},
		{
			MethodName: "SignTransaction",
			Handler:    _Adapter_SignTransaction_Handler,
		},
		{
			MethodName: "SignTransactionWithPrivateKey",
			Handler:    _Adapter_SignTransactionWithPrivateKey_Handler,
		},
		{
			MethodName: "SendTransaction",
			Handler:    _Adapter_SendTransaction_Handler,
		},
		{
			MethodName: "GetTransactionStatus",
			Handler:    _Adapter_GetTransactionStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "eth_adapter.proto",
}
