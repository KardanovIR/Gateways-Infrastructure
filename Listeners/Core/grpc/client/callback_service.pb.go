// Code generated by protoc-gen-go. DO NOT EDIT.
// source: callback_service.proto

package core

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	ProcessId            string   `protobuf:"bytes,1,opt,name=processId,proto3" json:"processId,omitempty"`
	TxHash               string   `protobuf:"bytes,2,opt,name=txHash,proto3" json:"txHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_51c84a83e429816a, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetProcessId() string {
	if m != nil {
		return m.ProcessId
	}
	return ""
}

func (m *Request) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

type TxRequest struct {
	TxHash               string   `protobuf:"bytes,1,opt,name=txHash,proto3" json:"txHash,omitempty"`
	BlockchainType       string   `protobuf:"bytes,2,opt,name=blockchainType,proto3" json:"blockchainType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxRequest) Reset()         { *m = TxRequest{} }
func (m *TxRequest) String() string { return proto.CompactTextString(m) }
func (*TxRequest) ProtoMessage()    {}
func (*TxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_51c84a83e429816a, []int{1}
}

func (m *TxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxRequest.Unmarshal(m, b)
}
func (m *TxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxRequest.Marshal(b, m, deterministic)
}
func (m *TxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxRequest.Merge(m, src)
}
func (m *TxRequest) XXX_Size() int {
	return xxx_messageInfo_TxRequest.Size(m)
}
func (m *TxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TxRequest proto.InternalMessageInfo

func (m *TxRequest) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *TxRequest) GetBlockchainType() string {
	if m != nil {
		return m.BlockchainType
	}
	return ""
}

type InitInTxRequest struct {
	TxHash               string   `protobuf:"bytes,1,opt,name=txHash,proto3" json:"txHash,omitempty"`
	BlockchainType       string   `protobuf:"bytes,2,opt,name=blockchainType,proto3" json:"blockchainType,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitInTxRequest) Reset()         { *m = InitInTxRequest{} }
func (m *InitInTxRequest) String() string { return proto.CompactTextString(m) }
func (*InitInTxRequest) ProtoMessage()    {}
func (*InitInTxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_51c84a83e429816a, []int{2}
}

func (m *InitInTxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitInTxRequest.Unmarshal(m, b)
}
func (m *InitInTxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitInTxRequest.Marshal(b, m, deterministic)
}
func (m *InitInTxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitInTxRequest.Merge(m, src)
}
func (m *InitInTxRequest) XXX_Size() int {
	return xxx_messageInfo_InitInTxRequest.Size(m)
}
func (m *InitInTxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InitInTxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InitInTxRequest proto.InternalMessageInfo

func (m *InitInTxRequest) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *InitInTxRequest) GetBlockchainType() string {
	if m != nil {
		return m.BlockchainType
	}
	return ""
}

func (m *InitInTxRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_51c84a83e429816a, []int{3}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Request)(nil), "core.Request")
	proto.RegisterType((*TxRequest)(nil), "core.TxRequest")
	proto.RegisterType((*InitInTxRequest)(nil), "core.InitInTxRequest")
	proto.RegisterType((*Empty)(nil), "core.Empty")
}

func init() { proto.RegisterFile("callback_service.proto", fileDescriptor_51c84a83e429816a) }

var fileDescriptor_51c84a83e429816a = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x41, 0x4b, 0xfb, 0x40,
	0x10, 0xc5, 0xff, 0xf9, 0xab, 0x8d, 0x99, 0x52, 0x2b, 0x83, 0x96, 0x20, 0x1e, 0x24, 0x07, 0x51,
	0xd1, 0x20, 0xfa, 0x01, 0x84, 0x16, 0xc5, 0xe0, 0xc1, 0x50, 0x73, 0x97, 0x64, 0x33, 0x98, 0x25,
	0x69, 0x76, 0xdd, 0xdd, 0x4a, 0xfa, 0x09, 0xfd, 0x5a, 0x92, 0xa4, 0xa1, 0xa5, 0x50, 0xbc, 0x78,
	0x9c, 0x79, 0xbf, 0x3c, 0x5e, 0xde, 0x2c, 0x8c, 0x58, 0x5c, 0x14, 0x49, 0xcc, 0xf2, 0x77, 0x4d,
	0xea, 0x8b, 0x33, 0xf2, 0xa5, 0x12, 0x46, 0xe0, 0x2e, 0x13, 0x8a, 0xbc, 0x07, 0xb0, 0xa7, 0xf4,
	0x39, 0x27, 0x6d, 0xf0, 0x14, 0x1c, 0xa9, 0x04, 0x23, 0xad, 0x83, 0xd4, 0xb5, 0xce, 0xac, 0x0b,
	0x67, 0xba, 0x5a, 0xe0, 0x08, 0x7a, 0xa6, 0x7a, 0x8e, 0x75, 0xe6, 0xfe, 0x6f, 0xa4, 0xe5, 0xe4,
	0xbd, 0x80, 0x13, 0x55, 0x9d, 0xc5, 0x0a, 0xb2, 0xd6, 0x21, 0x3c, 0x87, 0x83, 0xa4, 0x10, 0x2c,
	0x67, 0x59, 0xcc, 0xcb, 0x68, 0x21, 0x69, 0x69, 0xb2, 0xb1, 0xf5, 0x72, 0x18, 0x06, 0x25, 0x37,
	0x41, 0xf9, 0x67, 0x96, 0xe8, 0x82, 0x1d, 0xa7, 0xa9, 0x22, 0xad, 0xdd, 0x9d, 0x06, 0xe8, 0x46,
	0xcf, 0x86, 0xbd, 0xc7, 0x99, 0x34, 0x8b, 0xbb, 0x6f, 0x0b, 0xfa, 0x13, 0xa1, 0xe8, 0xad, 0xed,
	0x07, 0x6f, 0x61, 0xbf, 0x4b, 0x81, 0xc7, 0x7e, 0x5d, 0x93, 0xbf, 0x91, 0xea, 0xa4, 0xdf, 0xae,
	0x9b, 0xef, 0xbd, 0x7f, 0x78, 0x09, 0x4e, 0x4d, 0xbc, 0xce, 0x4d, 0x54, 0xe1, 0xa0, 0xd5, 0xb6,
	0xa0, 0x37, 0x30, 0x78, 0xe2, 0x25, 0xd7, 0x59, 0xd8, 0x56, 0xfb, 0x0b, 0x7e, 0x0d, 0x30, 0x11,
	0x33, 0x59, 0x90, 0xa1, 0xa8, 0xc2, 0x61, 0x2b, 0x6e, 0xcb, 0x31, 0xbe, 0x82, 0x23, 0x2e, 0xfc,
	0x0f, 0x25, 0x99, 0xdf, 0x1d, 0xbb, 0xd6, 0xc7, 0x87, 0x6b, 0xbf, 0x17, 0xd6, 0xd7, 0x0f, 0xad,
	0xa4, 0xd7, 0x3c, 0x83, 0xfb, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5f, 0x53, 0xfa, 0xbc, 0x20,
	0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CoreServiceClient is the client API for CoreService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoreServiceClient interface {
	InitInTx(ctx context.Context, in *InitInTxRequest, opts ...grpc.CallOption) (*Empty, error)
	InitOutTx(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Empty, error)
	FinishProcess(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Empty, error)
	CompleteTx(ctx context.Context, in *TxRequest, opts ...grpc.CallOption) (*Empty, error)
}

type coreServiceClient struct {
	cc *grpc.ClientConn
}

func NewCoreServiceClient(cc *grpc.ClientConn) CoreServiceClient {
	return &coreServiceClient{cc}
}

func (c *coreServiceClient) InitInTx(ctx context.Context, in *InitInTxRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/core.CoreService/InitInTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreServiceClient) InitOutTx(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/core.CoreService/InitOutTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreServiceClient) FinishProcess(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/core.CoreService/FinishProcess", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreServiceClient) CompleteTx(ctx context.Context, in *TxRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/core.CoreService/CompleteTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoreServiceServer is the server API for CoreService service.
type CoreServiceServer interface {
	InitInTx(context.Context, *InitInTxRequest) (*Empty, error)
	InitOutTx(context.Context, *Request) (*Empty, error)
	FinishProcess(context.Context, *Request) (*Empty, error)
	CompleteTx(context.Context, *TxRequest) (*Empty, error)
}

func RegisterCoreServiceServer(s *grpc.Server, srv CoreServiceServer) {
	s.RegisterService(&_CoreService_serviceDesc, srv)
}

func _CoreService_InitInTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitInTxRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServiceServer).InitInTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.CoreService/InitInTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServiceServer).InitInTx(ctx, req.(*InitInTxRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreService_InitOutTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServiceServer).InitOutTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.CoreService/InitOutTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServiceServer).InitOutTx(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreService_FinishProcess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServiceServer).FinishProcess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.CoreService/FinishProcess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServiceServer).FinishProcess(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreService_CompleteTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TxRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServiceServer).CompleteTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.CoreService/CompleteTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServiceServer).CompleteTx(ctx, req.(*TxRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CoreService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "core.CoreService",
	HandlerType: (*CoreServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InitInTx",
			Handler:    _CoreService_InitInTx_Handler,
		},
		{
			MethodName: "InitOutTx",
			Handler:    _CoreService_InitOutTx_Handler,
		},
		{
			MethodName: "FinishProcess",
			Handler:    _CoreService_FinishProcess_Handler,
		},
		{
			MethodName: "CompleteTx",
			Handler:    _CoreService_CompleteTx_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "callback_service.proto",
}
