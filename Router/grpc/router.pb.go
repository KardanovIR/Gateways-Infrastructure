// Code generated by protoc-gen-go. DO NOT EDIT.
// source: router.proto

package router

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message for getting transaction's status containing tx id and blockchain
type GetTransactionStatusRequest struct {
	TxId                 string   `protobuf:"bytes,1,opt,name=txId,proto3" json:"txId,omitempty"`
	Blockchain           string   `protobuf:"bytes,2,opt,name=blockchain,proto3" json:"blockchain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionStatusRequest) Reset()         { *m = GetTransactionStatusRequest{} }
func (m *GetTransactionStatusRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionStatusRequest) ProtoMessage()    {}
func (*GetTransactionStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_367072455c71aedc, []int{0}
}

func (m *GetTransactionStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionStatusRequest.Unmarshal(m, b)
}
func (m *GetTransactionStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionStatusRequest.Marshal(b, m, deterministic)
}
func (m *GetTransactionStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionStatusRequest.Merge(m, src)
}
func (m *GetTransactionStatusRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransactionStatusRequest.Size(m)
}
func (m *GetTransactionStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionStatusRequest proto.InternalMessageInfo

func (m *GetTransactionStatusRequest) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *GetTransactionStatusRequest) GetBlockchain() string {
	if m != nil {
		return m.Blockchain
	}
	return ""
}

// The response message containing transaction's status: UNKNOWN, PENDING, SUCCESS
type GetTransactionStatusReply struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionStatusReply) Reset()         { *m = GetTransactionStatusReply{} }
func (m *GetTransactionStatusReply) String() string { return proto.CompactTextString(m) }
func (*GetTransactionStatusReply) ProtoMessage()    {}
func (*GetTransactionStatusReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_367072455c71aedc, []int{1}
}

func (m *GetTransactionStatusReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionStatusReply.Unmarshal(m, b)
}
func (m *GetTransactionStatusReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionStatusReply.Marshal(b, m, deterministic)
}
func (m *GetTransactionStatusReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionStatusReply.Merge(m, src)
}
func (m *GetTransactionStatusReply) XXX_Size() int {
	return xxx_messageInfo_GetTransactionStatusReply.Size(m)
}
func (m *GetTransactionStatusReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionStatusReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionStatusReply proto.InternalMessageInfo

func (m *GetTransactionStatusReply) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*GetTransactionStatusRequest)(nil), "router.GetTransactionStatusRequest")
	proto.RegisterType((*GetTransactionStatusReply)(nil), "router.GetTransactionStatusReply")
}

func init() { proto.RegisterFile("router.proto", fileDescriptor_367072455c71aedc) }

var fileDescriptor_367072455c71aedc = []byte{
	// 188 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0xca, 0x2f, 0x2d,
	0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x94, 0x02, 0xb9, 0xa4,
	0xdd, 0x53, 0x4b, 0x42, 0x8a, 0x12, 0xf3, 0x8a, 0x13, 0x93, 0x4b, 0x32, 0xf3, 0xf3, 0x82, 0x4b,
	0x12, 0x4b, 0x4a, 0x8b, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x84, 0xb8, 0x58, 0x4a,
	0x2a, 0x3c, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x21, 0x39, 0x2e, 0xae,
	0xa4, 0x9c, 0xfc, 0xe4, 0xec, 0xe4, 0x8c, 0xc4, 0xcc, 0x3c, 0x09, 0x26, 0xb0, 0x0c, 0x92, 0x88,
	0x92, 0x31, 0x97, 0x24, 0x76, 0x23, 0x0b, 0x72, 0x2a, 0x85, 0xc4, 0xb8, 0xd8, 0x8a, 0xc1, 0x5c,
	0xa8, 0x91, 0x50, 0x9e, 0x51, 0x16, 0x17, 0x5b, 0x10, 0xd8, 0x45, 0x42, 0x09, 0x5c, 0x22, 0xd8,
	0xb4, 0x0b, 0x29, 0xeb, 0x41, 0x3d, 0x80, 0xc7, 0xbd, 0x52, 0x8a, 0xf8, 0x15, 0x15, 0xe4, 0x54,
	0x2a, 0x31, 0x38, 0xc9, 0x73, 0xf1, 0x65, 0xe6, 0xeb, 0xa5, 0x17, 0x15, 0x24, 0x43, 0x55, 0x3b,
	0x71, 0x43, 0xec, 0x0e, 0x00, 0x05, 0x4d, 0x00, 0x63, 0x12, 0x1b, 0x38, 0x8c, 0x8c, 0x01, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x1f, 0x60, 0x1a, 0x5c, 0x33, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RouterClient is the client API for Router service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RouterClient interface {
	// Get transaction status
	GetTransactionStatus(ctx context.Context, in *GetTransactionStatusRequest, opts ...grpc.CallOption) (*GetTransactionStatusReply, error)
}

type routerClient struct {
	cc *grpc.ClientConn
}

func NewRouterClient(cc *grpc.ClientConn) RouterClient {
	return &routerClient{cc}
}

func (c *routerClient) GetTransactionStatus(ctx context.Context, in *GetTransactionStatusRequest, opts ...grpc.CallOption) (*GetTransactionStatusReply, error) {
	out := new(GetTransactionStatusReply)
	err := c.cc.Invoke(ctx, "/router.Router/GetTransactionStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RouterServer is the server API for Router service.
type RouterServer interface {
	// Get transaction status
	GetTransactionStatus(context.Context, *GetTransactionStatusRequest) (*GetTransactionStatusReply, error)
}

func RegisterRouterServer(s *grpc.Server, srv RouterServer) {
	s.RegisterService(&_Router_serviceDesc, srv)
}

func _Router_GetTransactionStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouterServer).GetTransactionStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/router.Router/GetTransactionStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouterServer).GetTransactionStatus(ctx, req.(*GetTransactionStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Router_serviceDesc = grpc.ServiceDesc{
	ServiceName: "router.Router",
	HandlerType: (*RouterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTransactionStatus",
			Handler:    _Router_GetTransactionStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "router.proto",
}
