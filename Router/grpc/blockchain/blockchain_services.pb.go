// Code generated by protoc-gen-go. DO NOT EDIT.
// source: blockchain/blockchain_services.proto

package blockchain

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message for getting transaction's status containing tx id
type GetTransactionStatusRequest struct {
	TxId                 string   `protobuf:"bytes,1,opt,name=txId,proto3" json:"txId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionStatusRequest) Reset()         { *m = GetTransactionStatusRequest{} }
func (m *GetTransactionStatusRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionStatusRequest) ProtoMessage()    {}
func (*GetTransactionStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_350ad9760d6fb0fc, []int{0}
}

func (m *GetTransactionStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionStatusRequest.Unmarshal(m, b)
}
func (m *GetTransactionStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionStatusRequest.Marshal(b, m, deterministic)
}
func (m *GetTransactionStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionStatusRequest.Merge(m, src)
}
func (m *GetTransactionStatusRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransactionStatusRequest.Size(m)
}
func (m *GetTransactionStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionStatusRequest proto.InternalMessageInfo

func (m *GetTransactionStatusRequest) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

// The response message containing transaction's status: UNKNOWN, PENDING, SUCCESS
type GetTransactionStatusReply struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionStatusReply) Reset()         { *m = GetTransactionStatusReply{} }
func (m *GetTransactionStatusReply) String() string { return proto.CompactTextString(m) }
func (*GetTransactionStatusReply) ProtoMessage()    {}
func (*GetTransactionStatusReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_350ad9760d6fb0fc, []int{1}
}

func (m *GetTransactionStatusReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionStatusReply.Unmarshal(m, b)
}
func (m *GetTransactionStatusReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionStatusReply.Marshal(b, m, deterministic)
}
func (m *GetTransactionStatusReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionStatusReply.Merge(m, src)
}
func (m *GetTransactionStatusReply) XXX_Size() int {
	return xxx_messageInfo_GetTransactionStatusReply.Size(m)
}
func (m *GetTransactionStatusReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionStatusReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionStatusReply proto.InternalMessageInfo

func (m *GetTransactionStatusReply) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*GetTransactionStatusRequest)(nil), "blockchain.GetTransactionStatusRequest")
	proto.RegisterType((*GetTransactionStatusReply)(nil), "blockchain.GetTransactionStatusReply")
}

func init() {
	proto.RegisterFile("blockchain/blockchain_services.proto", fileDescriptor_350ad9760d6fb0fc)
}

var fileDescriptor_350ad9760d6fb0fc = []byte{
	// 194 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x49, 0xca, 0xc9, 0x4f,
	0xce, 0x4e, 0xce, 0x48, 0xcc, 0xcc, 0xd3, 0x47, 0x30, 0xe3, 0x8b, 0x53, 0x8b, 0xca, 0x32, 0x93,
	0x53, 0x8b, 0xf5, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0xb8, 0x10, 0x52, 0x4a, 0x86, 0x5c, 0xd2,
	0xee, 0xa9, 0x25, 0x21, 0x45, 0x89, 0x79, 0xc5, 0x89, 0xc9, 0x25, 0x99, 0xf9, 0x79, 0xc1, 0x25,
	0x89, 0x25, 0xa5, 0xc5, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x42, 0x5c, 0x2c, 0x25,
	0x15, 0x9e, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0xb6, 0x92, 0x31, 0x97, 0x24,
	0x76, 0x2d, 0x05, 0x39, 0x95, 0x42, 0x62, 0x5c, 0x6c, 0xc5, 0x60, 0x2e, 0x54, 0x0b, 0x94, 0x67,
	0x54, 0xcc, 0xc5, 0xee, 0x98, 0x92, 0x58, 0x50, 0x92, 0x5a, 0x24, 0x94, 0xc1, 0x25, 0x82, 0x4d,
	0xbf, 0x90, 0xba, 0x1e, 0xc2, 0x5d, 0x7a, 0x78, 0x1c, 0x25, 0xa5, 0x4a, 0x58, 0x61, 0x41, 0x4e,
	0xa5, 0x12, 0x83, 0x93, 0x3c, 0x17, 0x5f, 0x66, 0xbe, 0x5e, 0x7a, 0x51, 0x41, 0xb2, 0x5e, 0x51,
	0x7e, 0x69, 0x49, 0x6a, 0x91, 0x13, 0x77, 0x10, 0x98, 0x0e, 0x00, 0x85, 0x43, 0x00, 0x63, 0x12,
	0x1b, 0x38, 0x40, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x4c, 0xb3, 0xf7, 0x17, 0x38, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AdapterClient is the client API for Adapter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdapterClient interface {
	// Get transaction status
	GetTransactionStatus(ctx context.Context, in *GetTransactionStatusRequest, opts ...grpc.CallOption) (*GetTransactionStatusReply, error)
}

type adapterClient struct {
	cc *grpc.ClientConn
}

func NewAdapterClient(cc *grpc.ClientConn) AdapterClient {
	return &adapterClient{cc}
}

func (c *adapterClient) GetTransactionStatus(ctx context.Context, in *GetTransactionStatusRequest, opts ...grpc.CallOption) (*GetTransactionStatusReply, error) {
	out := new(GetTransactionStatusReply)
	err := c.cc.Invoke(ctx, "/blockchain.Adapter/GetTransactionStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdapterServer is the server API for Adapter service.
type AdapterServer interface {
	// Get transaction status
	GetTransactionStatus(context.Context, *GetTransactionStatusRequest) (*GetTransactionStatusReply, error)
}

func RegisterAdapterServer(s *grpc.Server, srv AdapterServer) {
	s.RegisterService(&_Adapter_serviceDesc, srv)
}

func _Adapter_GetTransactionStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdapterServer).GetTransactionStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Adapter/GetTransactionStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdapterServer).GetTransactionStatus(ctx, req.(*GetTransactionStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Adapter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "blockchain.Adapter",
	HandlerType: (*AdapterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTransactionStatus",
			Handler:    _Adapter_GetTransactionStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "blockchain/blockchain_services.proto",
}
